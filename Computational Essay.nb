(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[    201184,       4212]
NotebookOptionsPosition[    193601,       4107]
NotebookOutlinePosition[    193944,       4122]
CellTagsIndexPosition[    193901,       4119]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Using Multilevel NAND trees to Create XOR Expressions", "Section",
 CellChangeTimes->{
  3.7404978379670577`*^9},ExpressionUUID->"2079ab89-b2ab-462c-bce8-\
89046c72cd50"],

Cell["\<\
The goal of this project has been to explore NAND expressions and look for \
expressions equivalent to XOR. The Wolfram Language can already simplify XOR \
expressions with NANDs by using the following function but it only simplifies \
to a two level tree. By using more than two levels there is a possibility of \
finding a simpler version of three or four input XOR expressions. The reason \
that I chose to use NAND gates is that they are universal gates (any \
expression can be represented with a combination of NAND gates). Other \
universal gates like NOR would work but it seemed simplest to just stick with \
NAND to keep things consistent.\
\>", "Text",
 CellChangeTimes->{{3.7404978453762846`*^9, 3.7404978578628707`*^9}, {
  3.740498740385212*^9, 
  3.7404987407253027`*^9}},ExpressionUUID->"5bf0cb73-cb78-481c-b6f3-\
ae125f7dfe47"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BooleanMinimize", "[", 
   RowBox[{
    RowBox[{"Xor", "[", 
     RowBox[{"a", ",", "b", ",", "c"}], "]"}], ",", "\"\<NAND\>\""}], "]"}], "//",
   "TreeForm"}]], "Input",
 CellChangeTimes->{{3.7404978642807107`*^9, 3.740497868777689*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"4164c5c1-6a33-46da-b1ad-135202167bea"],

Cell[BoxData[
 GraphicsBox[
  TagBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQzSCvVzXnCruD2+e9YWb/f9rrL6p7ci7kob0emP5o
zwAFelBxVHkY/yMan9EBph9mLnZ5BB9mzy6veXOZVrHC5WF8mPyl2Xf5s0L4
0MznhKuH8bGrh9kniMFHtV8Ubn5JGd/BjHphuHoYH7t6mHtF4fKQ8BWHywMA
bOybpA==
    "], {
     {RGBColor[0.55, 0.45, 0.45], 
      LineBox[{{1, 2}, {1, 6}, {1, 12}, {1, 18}, {2, 3}, {2, 4}, {2, 5}, {6, 
       7}, {6, 8}, {6, 10}, {8, 9}, {10, 11}, {12, 13}, {12, 15}, {12, 16}, {
       13, 14}, {16, 17}, {18, 19}, {18, 21}, {18, 23}, {19, 20}, {21, 
       22}}]}, {
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Nand", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.03333333333333333],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 1],
        TagBox[
         RowBox[{
           RowBox[{"(", 
             RowBox[{"a", "\[Nand]", "b", "\[Nand]", "c"}], ")"}], "\[Nand]", 
           RowBox[{"(", 
             RowBox[{"a", "\[Nand]", 
               RowBox[{"!", "b"}], "\[Nand]", 
               RowBox[{"!", "c"}]}], ")"}], "\[Nand]", 
           RowBox[{"(", 
             RowBox[{
               RowBox[{"!", "a"}], "\[Nand]", "b", "\[Nand]", 
               RowBox[{"!", "c"}]}], ")"}], "\[Nand]", 
           RowBox[{"(", 
             RowBox[{
               RowBox[{"!", "a"}], "\[Nand]", 
               RowBox[{"!", "b"}], "\[Nand]", "c"}], ")"}]}], HoldForm]],
       Annotation[#, 
        HoldForm[
         Nand[
          Nand[$CellContext`a, $CellContext`b, $CellContext`c], 
          Nand[$CellContext`a, 
           Not[$CellContext`b], 
           Not[$CellContext`c]], 
          Nand[
           Not[$CellContext`a], $CellContext`b, 
           Not[$CellContext`c]], 
          Nand[
           Not[$CellContext`a], 
           Not[$CellContext`b], $CellContext`c]]], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Nand", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.03333333333333333],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 2],
        TagBox[
         RowBox[{"a", "\[Nand]", "b", "\[Nand]", "c"}], HoldForm]],
       Annotation[#, 
        HoldForm[
         Nand[$CellContext`a, $CellContext`b, $CellContext`c]], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["a",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.03333333333333333],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 3],
        TagBox["a", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`a], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["b",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.03333333333333333],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 4],
        TagBox["b", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`b], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["c",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.03333333333333333],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 5],
        TagBox["c", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`c], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Nand", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.03333333333333333],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 6],
        TagBox[
         RowBox[{"a", "\[Nand]", 
           RowBox[{"!", "b"}], "\[Nand]", 
           RowBox[{"!", "c"}]}], HoldForm]],
       Annotation[#, 
        HoldForm[
         Nand[$CellContext`a, 
          Not[$CellContext`b], 
          Not[$CellContext`c]]], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["a",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.03333333333333333],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 7],
        TagBox["a", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`a], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Not", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.03333333333333333],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 8],
        TagBox[
         RowBox[{"!", "b"}], HoldForm]],
       Annotation[#, 
        HoldForm[
         Not[$CellContext`b]], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["b",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.03333333333333333],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 9],
        TagBox["b", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`b], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Not", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.03333333333333333],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 10],
        TagBox[
         RowBox[{"!", "c"}], HoldForm]],
       Annotation[#, 
        HoldForm[
         Not[$CellContext`c]], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["c",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.03333333333333333],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 11],
        TagBox["c", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`c], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Nand", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.03333333333333333],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 12],
        TagBox[
         RowBox[{
           RowBox[{"!", "a"}], "\[Nand]", "b", "\[Nand]", 
           RowBox[{"!", "c"}]}], HoldForm]],
       Annotation[#, 
        HoldForm[
         Nand[
          Not[$CellContext`a], $CellContext`b, 
          Not[$CellContext`c]]], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Not", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.03333333333333333],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 13],
        TagBox[
         RowBox[{"!", "a"}], HoldForm]],
       Annotation[#, 
        HoldForm[
         Not[$CellContext`a]], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["a",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.03333333333333333],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 14],
        TagBox["a", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`a], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["b",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.03333333333333333],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 15],
        TagBox["b", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`b], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Not", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.03333333333333333],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 16],
        TagBox[
         RowBox[{"!", "c"}], HoldForm]],
       Annotation[#, 
        HoldForm[
         Not[$CellContext`c]], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["c",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.03333333333333333],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 17],
        TagBox["c", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`c], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Nand", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.03333333333333333],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 18],
        TagBox[
         RowBox[{
           RowBox[{"!", "a"}], "\[Nand]", 
           RowBox[{"!", "b"}], "\[Nand]", "c"}], HoldForm]],
       Annotation[#, 
        HoldForm[
         Nand[
          Not[$CellContext`a], 
          Not[$CellContext`b], $CellContext`c]], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Not", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.03333333333333333],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 19],
        TagBox[
         RowBox[{"!", "a"}], HoldForm]],
       Annotation[#, 
        HoldForm[
         Not[$CellContext`a]], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["a",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.03333333333333333],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 20],
        TagBox["a", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`a], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Not", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.03333333333333333],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 21],
        TagBox[
         RowBox[{"!", "b"}], HoldForm]],
       Annotation[#, 
        HoldForm[
         Not[$CellContext`b]], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["b",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.03333333333333333],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 22],
        TagBox["b", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`b], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["c",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.03333333333333333],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 23],
        TagBox["c", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`c], "Tooltip"]& ]}}],
   Annotation[#, VertexCoordinateRules -> CompressedData["
1:eJxTTMoPSmViYGAQB2IQzSCvVzXnCruD2+e9YWb/f9rrL6p7ci7kob0emP5o
zwAFelBxVHkY/yMan9EBph9mLnZ5BB9mzy6veXOZVrHC5WF8mPyl2Xf5s0L4
0MznhKuH8bGrh9kniMFHtV8Ubn5JGd/BjHphuHoYH7t6mHtF4fKQ8BWHywMA
bOybpA==
     "]]& ],
  AspectRatio->NCache[3^Rational[-1, 2], 0.5773502691896258],
  FormatType:>StandardForm,
  FrameTicks->Automatic,
  PlotRange->All,
  PlotRangePadding->Scaled[0.1]]], "Output",
 CellChangeTimes->{3.7404978695406804`*^9},
 CellLabel->
  "Out[1]//TreeForm=",ExpressionUUID->"8998c912-b957-460e-bf69-9703888dc6a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Two Input Trees", "Subsection",
 CellChangeTimes->{{3.7404978831781917`*^9, 
  3.740497886662881*^9}},ExpressionUUID->"d57f194e-080f-470b-9286-\
5b48778479e8"],

Cell["\<\
The first thing that I tried was implementing a recursive function that keeps \
adding new layers of NAND gates.\
\>", "Text",
 CellChangeTimes->{{3.740498958640733*^9, 
  3.7404989958552465`*^9}},ExpressionUUID->"5d2fb3c9-9038-486c-99aa-\
ef072b602947"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "nandTreeCreate"}], ";"}]], "Input",
 CellChangeTimes->{{3.74050038875966*^9, 
  3.7405003916180177`*^9}},ExpressionUUID->"29b18122-89b2-49d7-bbd9-\
dc950d2be285"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nandTreeCreate", "[", "1", "]"}], " ", ":=", " ", 
  RowBox[{"DeleteCases", "[", 
   RowBox[{
    RowBox[{"BooleanMinimize", "[", 
     RowBox[{
      RowBox[{"Nand", "@@@", 
       RowBox[{"Subsets", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c", ",", 
           RowBox[{"!", "a"}], ",", 
           RowBox[{"!", "b"}], ",", 
           RowBox[{"!", "c"}]}], "}"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ",", "\"\<Nand\>\""}], "]"}], 
    ",", "_Symbol"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7399824104447985`*^9, 3.7399824220163*^9}, {
   3.7399829654686775`*^9, 3.739983008000066*^9}, {3.739983081595643*^9, 
   3.739983151398675*^9}, {3.7399831837289777`*^9, 3.739983203577341*^9}, 
   3.7399851720331697`*^9, {3.73998527042515*^9, 3.7399852894899015`*^9}, 
   3.739996735037673*^9, {3.7399969186970453`*^9, 3.739996946204156*^9}, {
   3.7405002894810677`*^9, 3.7405003255536327`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"aedcf9a1-5652-4b46-845a-bad303d1a1a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nandTreeCreate", "[", "nGates_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"DeleteCases", "[", 
     RowBox[{
      RowBox[{"BooleanMinimize", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Nand", "[", 
              RowBox[{"x", ",", "#"}], "]"}], "&"}], "/@", 
            RowBox[{"nandTreeCreate", "[", 
             RowBox[{"nGates", " ", "-", " ", "1"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"{", 
              RowBox[{"a", ",", "b", ",", "c", ",", 
               RowBox[{"!", "a"}], ",", 
               RowBox[{"!", "b"}], ",", 
               RowBox[{"!", "c"}]}], "}"}]}], "}"}]}], "]"}], "]"}], ",", 
        "\"\<NAND\>\""}], "]"}], ",", "_Symbol"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.739966290898769*^9, 3.739966296465357*^9}, {
   3.7399775015172844`*^9, 3.739977514001643*^9}, {3.739977580202561*^9, 
   3.7399775814748*^9}, {3.739979550164486*^9, 3.7399795673114023`*^9}, {
   3.739979625362176*^9, 3.739979631440833*^9}, {3.7399803810583935`*^9, 
   3.7399803815178566`*^9}, {3.739980434625789*^9, 3.7399804360274057`*^9}, {
   3.7399806604641876`*^9, 3.7399806655556912`*^9}, {3.73998070920059*^9, 
   3.7399807103018312`*^9}, {3.739980758229416*^9, 3.7399808701452875`*^9}, {
   3.7399809043877*^9, 3.739980916749524*^9}, {3.739981754988738*^9, 
   3.7399817823106546`*^9}, {3.739982328365971*^9, 3.739982358963915*^9}, {
   3.7399835245084157`*^9, 3.7399835273741302`*^9}, {3.7399836447300425`*^9, 
   3.739983646771529*^9}, {3.739983680482207*^9, 3.739983684454674*^9}, {
   3.739984328324881*^9, 3.739984350207425*^9}, {3.7399843868539577`*^9, 
   3.739984401355517*^9}, {3.7399844995657635`*^9, 3.7399845270956697`*^9}, {
   3.739984615329495*^9, 3.7399846633291764`*^9}, {3.7399847253517213`*^9, 
   3.7399848483310814`*^9}, {3.739985009459064*^9, 3.7399850588874474`*^9}, {
   3.7399854038626986`*^9, 3.739985479806785*^9}, {3.7399855163803625`*^9, 
   3.7399855574069*^9}, {3.739985643128151*^9, 3.7399856454325657`*^9}, {
   3.7399857904618464`*^9, 3.739985797334421*^9}, {3.7399858656149435`*^9, 
   3.73998586920126*^9}, {3.739986165533657*^9, 3.739986167270154*^9}, {
   3.7399862125731707`*^9, 3.739986222631686*^9}, {3.73998644017307*^9, 
   3.739986506326481*^9}, {3.739986546518489*^9, 3.7399865521961656`*^9}, {
   3.7399866132512503`*^9, 3.7399866136321735`*^9}, {3.7399868409053173`*^9, 
   3.7399868446763716`*^9}, {3.739986895163863*^9, 3.739986903013604*^9}, {
   3.7399872233821545`*^9, 3.7399873063834085`*^9}, {3.7399873569477744`*^9, 
   3.7399873625491943`*^9}, {3.739991785163275*^9, 3.7399918077054167`*^9}, {
   3.739992041616007*^9, 3.7399920467636595`*^9}, {3.7399932615722756`*^9, 
   3.739993294948904*^9}, {3.7399935313858304`*^9, 3.7399935483441896`*^9}, {
   3.739993732451888*^9, 3.7399937331170244`*^9}, 3.739994301734782*^9, {
   3.7399946194254127`*^9, 3.7399946575559363`*^9}, {3.739994736239511*^9, 
   3.739994743868377*^9}, {3.7399969551853976`*^9, 3.739997025737596*^9}, {
   3.7405003087495575`*^9, 3.740500319206601*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"fa42d1b8-a23f-42b3-add7-d10b5d56b649"],

Cell["\<\
This turned out well except it only accounted for certain cases of two input \
trees. This is a very slim proportion of all of the different trees so a \
better computational method was required. The next function that I tried used \
the assumption that each NAND has a certain amount of NAND gates on each \
input. This makes it easy to go through all of the options recursively to \
until the branch reaches an end.\
\>", "Text",
 CellChangeTimes->{{3.7404990510189505`*^9, 3.7404991664563274`*^9}, {
  3.7404991968839827`*^9, 
  3.740499336941557*^9}},ExpressionUUID->"361488b4-1d2b-4155-be2a-\
24035f183701"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
h/xx8LC+Dw16QmQcKRpdKhpf/sZXxW+t2va/lVveXrzO6xzoL0TsRttxqPw1
U1rjZVFZ/ur9xORLhi/qOfSzDdGSmc5flmm+YcvgyMGf/nP3oa/e1fape3te
0unWE3q/fHSvl9p1v2/+9A++nzlgzeznRNYfRP3+IuuqudvkgmK5vLBYN6KP
NfEwS0iXqPw1Z3Sf5SMvW5nTaXbu/a1FclbC6akpJw56+v7BQ28dOPRRkdZS
1L9IZF/2+pLC15dt/s/yn99a8a23dLQstfTCZF5f+UIvf4X9/FVf3JQsuqdk
nd7oxPseebfjkIVXDZ+7XZY1vfd2wN64aFS3FSO6TR/xRGtxRJboJDK6qPw1
0QnPCRdt1qUvE76k3/Y/skHa62RkVcnX75aseqlo3bgW2c0aZ5zUIuP0tMyz
r3/qk2uGftLrqdd07czZncMPyV8AAABAVK3lL3/koM5fNy0b1X5pTvdpowa2
Ea2yxSX108586qmbh4/q+uTQP4vUBiL9ZJF29kvLws+uLH1hVckbK7Zs80NB
xGQfmScjc2RksiycdaU//rBdRts+A6deNnTptYMnbPRHLXq87u7R/BWbaeX9
9rKJvV6Fr1fvav3Y/T0u7v3HJjc82/TGF/7Q675509/bMOWf330+/KDU80Ry
b5F91RdFcnZIzi8s1dvUOS46nyxa/1oza0zv5aMu/WpUp5mj/9FaHJyd2CE9
/cJBQ+8ePKzbM8MeSEqtL1KPFZnnvbzcfv4b94W17r8Xb8z3NhGO2OHY2dnm
Oip/TZTbZ+n81TWlwamNTr33kfc7Dl3QadjsfBlc20tFy/WLcjuvGNFl+oin
2oij6oluIr3ntJJo/UsP3ZTR1v1OdL1pt0S6eVKu37L2w5J1rxet+O8xmYnH
pR58QsLBrbNP7Dlo/JWjZl/3zDiVXovs3bwAGPkLAAAA0Govf+n+G+FVM8eq
tNJ+yTNdp4x4sqU4IlVcmVXvkoGD+z85tOOQYf3rZybVS24lUk/+z3I5YqXM
XS3/s7pksx+pwv4qXLH8NV+Gp8mC2Sp/qbRyaUbrmwdOvmzokl5+/or1n7d1
/nL9AXX+lbzjP6LCyA9v3vm7V/sf9dDdPc697q6Wd7zS+NYXT+t59/y54zZM
fWzLlNEtxXFp4mqRfcXcfDmxUH4Rkroffix/xfrG6/z17M3Ril7uI81Fi3oJ
1ySnXvxkzj2PD+84+KnbslOTslJbiYTf/WelzFktc9fI11ZHdgTqcd6iYHKb
48z1EqVf/+qdLLp4+es0lb+uHjKvc3z+Um/9g8pfy0d2mTbyiZbiqCzRReWv
GcVyim3NLyk1oyX9dpF6zKTj9TBxi6W9cduGKflr3rS+/t+5WeIsIc4X4tDk
g2546uN2g2f1GDw+2u/R3Z0JjPwFAAAAaLWav7y08vXMsTesGH3pkhFXTxn5
WPOEwzJSe4jUSweMePyJUX2fHHJLwyzRWIi0hJZvLHVV+Bq9Sv5npbvJj1Sl
ru5B4XV9dyMLZHiGLJwbyF/j2w3/8toh4zfEOhbqwOV4/+oVmEN+Z/rtUm6R
9jev3XryG7edO+TPd5/X+a6mfcY2vvX5k298YOrcCWumDto4adThokkTcY7I
On/2FjmpVM4JB/OX3lQoNv5w3ayxty7N7bB4VLdJuQ83E80yEjqJ1Iv+Meq+
R8f2HPTM3QelqyNKz0w/9PXFkedXyzHL5StLbW9Sm+2qlFRi6YCxI+IukNYU
uW3uNfV0/mp4eqNT//zwu52GfNF52AzdDTJWy1Ohav2C0V2W5nSbkPv4IUlt
0xOvEhldZpTIqZa1sMjaEc1f0T7y0ZPvUbu9ddOqicVrxzkr3z5biA6p4jIh
Ts0Q9zzxbo+n51z/+OQfpVzvn6NwpR/ir0L+AgAAALRay19ebFL5K7xa5a9V
o9stzekwddSAlklHJCV2FRmdl2zdvip/0Ya8Ode2P/pPV551Y7srmpx5U8pF
/0j+/f9lnHfbOkeuD8tfSv22fv5qWY41X1rTTP66PN3LX5cNm6/yl6l/Ra/c
y6ZBlUhns7TXyshXsnBBx2zRoUHC8U0Oz/3v/D9/tvnuCZse+2hmngpooS9l
/rwL69U/v8lJhzQ9s/+gt7uP+KzroLfyY83jA/nL8Y9o7fSx/VT+WjSq2+TR
jzRPbJWVdI1Iv3xxwbeLi6b9uG1+tytPuevKc3pddkXLs29MPf/PGRf8pdEF
d68NyZ8tr+m82pDtTbbKt5wF3hFtj+avrikNgvlLz/8qq755+aubSnwTRj92
SFKb9MQOIrNzMH9Z5Z4fy18q8NmF0s6T1noZWv7G7ae81+/w9249Ivf2KxLS
jhfZXcRBV8/bJheE5aLiotJf/UlXQP4CAAAAtFrLX9Fu7ZHVs8besDz34mWj
Ok4d+UiLhMPSU3qK1K4zdjgLS7/7bsvcmzse+tClTe675LijT7um/pl3Hnxe
/wbn9V4k5VdSfmd5hS2/NcR2W86R7iRZMOsqlb8SRPvMw7zxh8MW9Ro8fpOM
xTQn9hNx/bJRRLo/yvBCWTpF7ph7WYMG59Q/pu0hFzzz9or7P/r+vvFfP/3p
pI3uNsteJwuWXF1PdKgnjm3R9s6BL10zeMo1QybpaWXRclJ0/KEj7R3SWjN9
bJ8lY65YlNt5Uu7DLRLa+KMBu8woLJ0TXv113vw+1xz913bZ919x9HFnXtng
zFubnnd3w7P6Lbflqoj8NuQdkR8wtrr2PG9E5Y55neuLm5JE92SVv06+7xGV
v+Z1GjZ7a6CLiAzUvyaPerxFQtuMhGj9yx9/GM4z/TdM4csLoVagbWNYhte9
1v+Yj/s3fP+uBs/fdVZW8hEio5PI7vhFvpwalrNLvVGIuwv5CwAAANBqL3/p
1Yotr/61PLfdspzO00Y82lockSS6ivo3zgrLmaU/rC9cvGZWbsGnD+Z9PixB
1BOpJwqvOfzvHhz31V8+/GrwB4u3+snCsbZ6+cv6TBbOuaaRl1bapbfpM3By
u+GLrh1SIX+FHOnoYXsl0l27btYzmyb98+fPRhwtmh8izklMP+/LPDnVkp+H
5dzi4jxpheQOGfnmnVvPePfWc4fc1++I067IOP9vib//+xpH/mzZm4tKrOhI
QMd1VA7KV4ly5tjey8Zc5uevASoN1VP5K63njFI5x9n8bcHiFTNzSsb/deu4
x5JEokg9SiQeJZJPGPjxD/94d/XQ9xZt8ydb+SuaqfylguG8Trr/YXKDUxuf
fO+Ad68esqDTsLmbA/PF/GaQ0fw1NefxlqKt1/8wvZvff8OeV1q6pVz/w9jJ
97pBStuWISvaQfHLnKvXjjxtzaiT5ozu1STlcCEuESkXvrHEee7r0n+v/Dn/
t3yryiN/AQAAAFrt5K9o1z6ZL22vWrQs9/JlI7tPe+bJ1uLodHGdyOw1pVB+
4f78XeGir+bk/DLhr1vGP9HQe7dskZIl0pr/Zdx3f/l860PvLP8l2ls+37bn
SHuS3DGngz9ar129tjc+Of6iZ77sMXT8+lj/Q9eNpTDb9udabZf28p+mD94+
4f+2THy2RdKpQrQXWe0WbJcTCuXUiFwYjmz1XmtLa/0bfY58u98xg26/+qQz
Lm1w1oMpZ/19TURutORmx6tYFXsRz/H7EKqwtnrOmN5fjb5s8aguZfkrpefc
Qjk/lPdj/pLVs3J2fPJAyZQnG6gDSkgViQ1E2lF//2Dj3z/b8di73hH5s9Xy
vP4b1mSZP/eq7Oj4w1MC+SvPLP6lO5BY6xfuUv6KzoTzHi+1/SJa6Q9Ln+vx
bc7ZKoItHN2ngWghxMWi3iWvLYk8t1a+tKZgx2/9ZpUhfwEAAABaLeYv6UUN
e+30sX2XjWqv8teMZwa2EUdliJ4i6/pJhXKO3LaqaPUXc17eMGfkxklDWgpv
GeODhEhKSx3w1rq/vVc08O1vN3q9M1T8KbLlPGlPlDtmqfx1k7f+V8sbnv78
DyO+7DZ0wo8yOqjPMWnFa11fJN2fpPPVhgkDwxMe3PDpc4kp54n6fUXDqxYU
yFmF1vzSoqWFRbpzhYz8+P/uOOZ/tx426o+dzjjh3Oan3nPw+Q+tsuXXlvwm
7K0HXRjNX+o9CmR4zdzRfVbkXuGPBnzMz1+dRWrPWflybqhgbdHaRfNe2zB5
yKbxT7bxj8jPlclPvrPhL2/tGPj+tz/4KzLvkAUhOddbfzl/VjB/3TPg/U6D
F3YeNjvPnMdo/vppYW63Xctftittx/IP0Nvz8IZFo7t/M/ycH0desDjnloNE
M5F2mcg4/41ldu5q+ezyfPIXAAAAsNvVTv7yeBEgJMPfzRrdb0XO5ctHdp75
zCOHijZpKq1k9poalpOtkiXF20pVPrC2yOKl//7jkW/d0+LN/i1G9Ls8I/0S
kdpHZF65JE/OKZazd3xXKr+Q1seyYMZVDcTN6eKizENU/rpw5Jddh03SHdRt
GW287v3rFkXCKnytkaHFf7u00cDzxZ/aHXdazyHNbnjrqGtHf+snoG3eUMJo
20Bp/1Qw8R9Fn9y/acIrLRJVBDxNpF30+qqil7/++X/Lf9oU7e/huLqjo5+/
Vo66UiVKlYZU/kpP6CwyvNW4prtyXlHedq8ct11GVj/b7+g372j56p2tnn+g
c3LCOSLjRtG4/ewiOalYLnF+KfLy12cyf0an7Oj4w1Man2ryl1l/+dfnL2/y
l23rRam9Y9y07dO/y0/7y4/75733ZJOEViL59yLxlNeXRp5dI19eY5O/AAAA
gN2uDvLXmL4rRl26POfqGSP+cai3WlZnkdpN5a8JtjW/2NKN1mXku5fvaPrB
neLj25LevOPcluK01KQbReZVC7fJyWE5T4bz5GxpfyyLpqv8dWOyuDS71Y1P
jv/DiEXdhk75MTqiz+887409jPgFqx9keIksXvDghQ0H/77ePe1OP+b64Rk3
/Pe4217+1hsWqQJLJCIt2/Vndzkbf574j/xJ/9j4+UutRUJDcbhIOeOFJQWj
V+W/vnrHz/78MtcJe0cUyZehtXNz+67K6bh8RPdpI738lZqoEmWPqaVyou3O
CZVGx0xGfnjjT8d+dGfm+/1TXrzt5BbixMSU7qLeJXOK5GcROdMqyJcLvPy1
Y0bnbHFzUln+unrIwk5x+cubz/bTgtG7mL+siPTHTFr64dDGHZ8/LD++Q350
Z8nnOV79K+VcUe/s/y53nl0l/70ixPwvAAAAYLervfwl9fpf/vjD3EuX5Vw9
beTf24hmmaKjyOw+IyInRCLzS+3NOjuENz1/zwlv3N3ojbuyn7v99MPEofXE
pSL14vnb5ceFclI48otcLJ1PZdGsTg3F9QnikqxDvf4bw5b0HDxtQ7Q+ZelL
d1fPO7OWS3uhLJj3z3Ztnjy3+R1/OP/EG0Y0ueWtw3uO+MlrTK+eprsb+j07
rJ+/n/HEpumP/DT++SOESl/16okjX//KGbNG/vur0vV6MbJIobd1lb/C0fy1
YkT36SMfa5nQJjWxk8jsNqNETiwt/jJcsEX3A3E25t529H//2OSNuxu/8Mez
2yS3ThPniPrnfbldfl4kZ4bULi6T4c/k9hnX1Bd9k0SPpAanNlL568OOQxZe
NVyPP3T8mp4e97hx/phdyV/+wtPSC5iO+vFrfJsKJgyQn94lx929/ZMRjZJa
iKQzRNaZry0JP7tcvraihP6HAAAAwG5Xi/nLkW6htLz8tTT38qWjOk8d+VDr
hBZe7/T0rlNLVP4KzysJb9HdM9yt1tcvyq+flqsfl6teOTGpfuvU05Kzzr3l
6XHXjJzSdeTLeXKNtCfI/JnebKlEcVnWEV7/+aFLrx00bWO0/0ZED0D0L9+3
b/32w+I1r8kVb5+f7K04fHxq/YffXnfXJyUPfbh+Y7RfYtiLJ3bEnzm2RYam
yPwP5Y6FlzdKuSKzwcmNT7jxqc+vHPlFt8Gffe+X09T2va6KfqKcM1rnr24q
f7UWKn9dpfLXNJWqpLWgZPs2PafM/kWu/pdc9ZRcrX7eOCIxo3W9U9KyTr3j
yfe7PzOt+9BXtsuvvf4b22dXlr9mbtWJMlbAku6u5i/pj8OMrQamQk3kpyVj
eq0eduG6nMtnP9P/oMTmIvVckX32f5dbzy+3X19RTP4CAAAAdrvayl9+/cXd
7te/vNWKF+d0nzLyMZUd/NlSPaaVyil26fySYr9apJ68MbLuP/KbofLrQXLN
S2cmiGOSGzVqcEK/x9+7euicbiPf/9n5WoYnyaL5Kn/1SRTtM9v2GzjlimFL
r3t68qZo/rK8zbh6Fea8wm//a339vFz15hlJ4sJkcWhqw0c/XHv3+O1/+2jN
j9GeitLxlxbzM0u+LJ3jLRNWvKjDQaJbqjivweG9n5h8+fDF3Z6a6OU7vZyW
N1KxQCXKmWP6rhx1pcpfM0cOaC1apSRdJep1m1IiJzv23OKCrd76Yyp/bXVX
qUQ5WK4eKpe/claaODKpWcOsE+8Y+NFVg2Z1feaDjfIn6c6WBV92qi96C3F9
+sEnZp/4pwEf7CR/bdr1/CWjR+f4TSGtHxbndv9mxPnrRl08N+e2xiltRPI5
IvPM174qfWFl5LUVO8hfAAAAwG5Xi/krIh0vf80c02/pqI6Lc3pOGjmwRcJh
qQldRKbOX2Gdv/z0lLft63dC375WvO7l0Kr/XJguzs0ULbIa3TfglV5PTe/6
xP+2yK2WnC9Lll7eQNyYINpntb7l8YmXDVt03aDxZfnL9t9WcTeXrPyXXDNK
rn799ExxerponnHwk+8sePDDVYM/WbZBt92wpWX5qyvrrhr21zK0RG5edH62
6N4068wGbW59bPJVTyzuNWjaeq9doSx2nUBH/b4rcq9cPrLLzJEPtxEtvPpX
VrfJpXKydOeHSrbpTvih/OI174e/fin09SvO1/87I0Gcmiza1Gt130OvXvvE
1J7DPvhBbimVS2XRsiuyRd/UhK6i3lmHnHX3Q++a/KWHR8bGH+5y/rJsvxOk
bsjvJcf1i3Kv/j733JXDTl8w5vZ00UIkXyYOuujV5aUvrCp68+ut5C8AAABg
t6u9/OWqQLRdhtbOGd1veU6HpTndJ+U81jyxbUpiZ5HldauYYtnzi61Y/nK8
foRhlXU2SmfFjJE9vhjZ+8ORA7KTGor0M0X2Sa8tmvD2ojenTn3t903TbkpN
uTy9bZ8nJrYb/mXPwZ9vjNazLC+s6AwS/nHWc70WPNtx2rN9Wvod4JPV/1Ia
icxmIukgkdIgQSQnC5Gk/ksQKSI5Sf2bIBISRXqCqC9EAyEyRT2R1kE06Csa
dJyxTc4vkUuKvGb1XkXPWT19bJ+vRl+xLKfL9Bwvf9UTV4mMbhNK5ee2Na+g
ZLvOX7Y/WUyqILVZumvmjrl5Qe6tn+U+2SCxscg4Q2Qe++riz99f9PqsiS9d
0jjpxrTEnqkNTzroBFP/ytNH5DrRSGlv2rX+G/7NUNjSOdjbGXv9K3e0fO82
8ckf0/91+2nN0s4QqdeLjMtnFMpJlpxZbJO/AAAAgN2uVvOXs12G18wZ3Xf5
qPZLc7pMynm0eWKblKROKn+p7KDy15fFVl50NpYfIVzHctS99XP/df2CsV2n
jHmwlUjIEq0T6h3z/MJp/1n5+cT5n53WNLN7UuJl9dr21usvD/l0Q3T9L5VW
It6sLvXjrJ83tsfiMR0n5t7cJEGIxASRlC0S0rwc5qWtxGSRqDJXYor6T6i7
SQmpKn0lpKi/ipREoZ6XKpLTki4UalcbXTk9X04JyTkhbyEwf03nldOf7a3y
lzqi6SMHHCpa1Vf5S6WhiJwi5cISO1+vt2V7+2R7tbawtL6b80KvBaO7TBpx
b1uhol1bUf93Ly6e8tqyD2Z98eEFB6dfm5rUJTn7lEYn3fPIOx2HLoj13/Dz
l+P4Yzl3OX/Zrh/cLH8Aozqr9rpX7z7y/Tvqvdc/67nbzssUZ4qMvqJpjzkl
cmpYzikpKfoNX6o45C8AAABAq5385a2W5dVd8qS1eubYPstyL188qvOknEea
J7Yy3QKnWeFFRcXRtOI6uhOh3+N902fP9Znxwo2Tch84TIhWolFKQrMXl84b
vWzyh3MnnNaqYY/M5IvqNb/hKT9/Df58Q7T/vOW6Bd5SYM4OaX27dMy1y3Kv
+fzZe71MldZEpLURqQ38JOb9JKvopXKZymAqa4lkrwiWmKiyWIpf/zpEiEZC
NMw4SSRfIBpcOLdEflYsVdgJ5K8bvsq9cmlO9+kjH28j2vr1rx6T8uWEsPzC
T5TewEFH+msfW14wtNd/9nyvWc93nzXmj0cJcahomJJ4yEsrF4z5atLH0z86
u2n9numpnRKyzmp2hslf/vhDpyx/RTbt2vpf6hWW/rdQur9I+wdpLX/+luPe
uv3ot2793Zg7r0nK+L3I7i3qXzJru5xdKJcVl5b+lm9VeeQvAAAAQKu1/GV5
mUCllTU6fy3N6TIl55EW0W7tPcrnL90s3e804aWwPBmaJvM/kgWL2zVMvax+
ixOaHHV0r56t+/Q4v2uH4w/O7pwqLspu4eevRT0Hjd8YzV8Rx1WpZZN0NsvI
mn+eJx79fWr/K0/u0L3nCTcNOLbPQH/0YLRBR3R4oLQjMppS/EaBIfXWqya/
unFizo8TXkkTWSLhGJF60iPvr7nvo58e+niNt0KWmy/t5TPH+vlrZM/pI55o
Iw7LSOgkMrrNDMtpjpxXYv3ij6i0Xcvyu2dEwqXeKER1RMXj5NYpVzURF6U2
OrHZ0W2u7dLs5q6/73rliQ3r98zM7JHe6LSGJ93/6Psqf3V8ZvbmaCN9P4J5
xcFdzl/qdiRcLN1NW7+btO3r9yKr374gTVyaLC5OECfVS7r9nx9c+/Ti6x//
5EdvxKfKyX7Pxt2E/AUAAABotZW/dLApkpF1c0b3W5HTYfnIblNHPNZS+P03
Mq5T2WFqxP2yOLzNH39Ytkyw1xNjqxOaIu2JMv+LDvVFz/Tkc7IbHX/tdc1v
uP68qzue3bJFj6zMP9Rre+OTky8dvvT6QZP0eseODDtyg5TfOvb3MrzqiYvr
PXlJk95XXPD7bnc17Z3brE9unleTslwdwXRTQI/jjxG0/FlSO6Sz/vvJY3Z8
8vdtk4ZmqYNPaCIyjh3w/rp7Ptz20Kebtnj9PbyVxWaNvV7lr2Uje04bMai1
OCJd5a+sLlOK5WQrNK+4yJ/RppJXxJWx/h6yUIYXyOIJsmB6hyx1RKlnN2p+
+PXXNu3X++xrrjqt2SHXpmddI+qf2uC4+x99V+WvK5+Z/Ut0AKOZ/7VxV8cf
+i8slO4PBd+NC3/zhrPi9fPTxHlCnJ8kWqdm93l64lVDF/Ua+MnP/mrUxTLW
qn53IH8BAAAAWq3lL39UYYkMe/lr5cj2K0Z0mzbisdbisHTRTWRc78//ck3/
DX+onv8SJyLdLa78SpbOkAVfdGwgbkwXVzQQZ3budET369p1uua4g5teVj/7
9EZH93p6xqXDl/Xy85c/g6xQ2iulPU/aS2TRgn9c1OzPlxzT+cqrz+71UOO+
/2nW799bvP2KNpz38pet99LPX14j+pBXBXK+/X76qC0T/7514sBmQmSITJHQ
ZuC76+7+tPS+D3/x6l92oYysnjXGm/+1bGT3aSOfUvnLq39ldptWKqc6kQUh
r6Ojip1ePc4ORTORG3attbJ0gcyf2ekgcX2muPCgpFN6dGrVq/v5nTsd26Tp
FfWyL6/X7Jgmp9752Pvth3n5a5OeD+fvs5fCnGj+mjby8dZe/vI6fswoVudQ
zi0t3ayrV24wgoW8OqD8QTqri9e8L1f+P/urj49Oyzw0pdmRGa2ys4/rNWhc
l2cm3/TkO5v9I3ejjSN3D/IXAAAAoNVO/vJ4fQgLvLQy9oblORetGNVpRs6j
Kn9lePnruqmlcqKl0oq12c9fOq/5NSnLcQr9aVwbpPXV1glPO+Mezv98qD+N
K0MkJKeIhPrefjXqPHTuJSNWXDt80kZvsJ96ry0/T3o6f9Jf8yb+deuUIc2F
SFfPSjrk0Q9W3zOu5P8+2rItbt/ifnT+kt9Je6EMTZZFMzo0EBfXa/q7Q846
tfNjTfq90bTvC15PDKtIhn+YMfa2paPaLR7ZcUbOwEMTjvCrUT2mF8jptpxf
WJznlZMcv/jlREc82n4pyv5Rhr/aOn5I8ccDtk4c6c8+SxSJCWo/s72slyYS
Dr3h6U/bj1jcfui0zTI2MlKXwKwf54/ptuSZLjNyHm8r2mYkthfpXWYXy+mW
nF1a8rN/Dh09U8xx/WWX87atfatk7cvON2+flinOThInZmYfe1LPZqfd0/y0
+5ufc+/ikFwu5dcRr7W+LStbOOw3IH8BAAAAWq3mL7tEWqun5PRc+dxly3I7
TRr+cNuEI+qJ7iK957RSOckJzy8pzYv2n/fYXs++iOMNBVQ5okSWrt048/lf
Pn1s28RhzfyQkul3MExIFCKlScdhc/4wZGGnp8dt9DKbyl8b8z/5q/y8r/t5
v23jBzb09v1wkXL0gI/X3Pvhhr99uHZHpXsYnRHmer0TVUSSvzjuWtv5SpYu
7J4puqeJsw4+6oquA1pf92LLG57zxgQ6pTK8fspzdy599rLFI6+cPurRlqKV
l79Srp1ZJGc4cl5xyRYpS7xJZo60rUC+89duLv1205xXfpk4eMPEwU2EODjZ
a/eh8leq140xS6Qe1WPwxIsHfdH5mZmbolPSpGNH/FdvXDCmx/LcLrNG/b21
qF8/9VyRfcWcX+TcAmu5FdI9JKP5y5Y6f+V9917Buv+3Zfm4wzPFEWmNG6Ud
3eKM/ged+2D22Q82PPO2H1ypUtv6kFWg9852dmMEI38BAAAAWq3lL291Y7tQ
2utmvXjHvBGXLcztPmX0oEPEoRmis8pfM735X0VLQhE/O9hes8TYzCzLrxc5
luuNRSzeKsN5smTNy3ef+eJdx+fcc36TBL+wldr0rx9t/PP4okfHrV+vxx+G
f3rzrsM+6Z/y4e0ZL916VjNxrEjrLBpcOKNYjnfktIg3y8mne31EO33oh1wT
kdSW3ALpbpWR1e/2P+GdPsfn3npjtmgj0ruIRj1n5Mulxb9s3bHiw2dvnT+2
3bKxnaaPHtDa63/YRWRcP6VQTrScOUUFm738ZfvrkUW8kY36oFydbyIytFWG
flbb/9e9Z/7rrpNz7764qfBSmEiqp9LiQ+/98MBnJX/5cH1e2XrS/vrLkZ9V
/lo84ooZuf0P8bo2qiTaWGQ2EPXSRYofSr1ujonJXvv8lARvMTO/w776U1p2
zv9mD39v/eC3vlc7ts1fS7rInzFX4uVDnfKc2AnZPchfAAAAgFZr+cvjFMnw
11Of7bdwTIcFuT0njxrcKvHoLC+tdJ9aIGc44XkFRX7/DT91OdHxet6qV37/
eteJDUws+en/3XPsf29r+NKfjm8phNcZI7HxP97/4d4Ptv7t7TUbdQXN/uHN
O5t/crv4+NaU1+64oLk4OyHlJlG/3ZyQikVyWigcW19YZ42I/2OZGWHlfxy1
tdf6Nf9f30P+dWfXw1LaZCR0EJldZllyTmTb+oIVH/77ji+fb79gZIeJOf9s
LlplJXYT6dfNDMvJjvNFuGRztKKn8lPY5C/1ZmHXaxHi74IjrfWv9D/8v7cf
/MIdx7fR+SshQ6Qe9fD73//54+0Pvv/9Nq+oZ3vrodl+NdDePH90z6/GdJg+
tk9Tb7Ci8EKXVzXzqoGJXt7ybiYkJKmfxMRk9dtLX0nZIv2wh9/95oFxob+8
szUvNqfM8QJv2HuHaCzUZ4P8BQAAAOxmtZa/nIgef7hy5gs3Lh51yeJR3SaO
eLyFOCIzqZtI6z4jIidEwl+Gbd09w7Gji385KnHEklEobIUdvZbxhhfvOuqt
u5u/cOfRbXT+Smr6yAfrHxxXOPDDDbr/vHTXvPHH5p/2F5/0T3n19jMOEceJ
xC7ioMtmF8qpEW/1ZC9/mZ6H5SKY35HeiY1FjIa+ja/ee/h/72yVe9vVrUSz
LHGFSOs8rUTOKN3+w7ZlH7xwx7znrlo0uvvk3IdbJfsd9bN6ziiSU0Lh+aHQ
pmg/fL+M5y3g5dq2bYJdtDVk8fev3t7643uavHjn0SpRZiYKkVZfpB3xyIff
/+XjbSpa7jBVOW8Za0eGf1L5a9mzHaeO6dXMH7LoLWSWmJqgolZisk5fXhUs
0ftDgkhJEsnpCeneVLm0lgM+Xn3fuMK/fLApL1rlc12v2WTEqzk6Xt9Dxw25
/ofw279dGvkLAAAA0Gotf/lBo1ja341/tv+852/4Yuxt48cMbpHaNiulnUi5
eE6hnBOOLC4oyov17otmE6/wFdbJyI32YFf/bR51zzlj+h/77L2XNNVrJic1
furtFQPf+2HQ2yv8DorqWd89e+fxr9/Z+o07D8257aLm6cckpV8kDjprXp5c
UCoX50dKZbA9oBmFuJMSmJM38p7Tn//TmcPvuK5VUrN6SeckNmj3Rb5cVJq/
Of+7917826wX75icc8tnuU82Tz4kNekCUb/dkmK5sLR4danXUb8k2svRzC+L
Nhdx9dpj3ptvfemeM/91++G59557sBCp3hGlifSWT7y78OEP1g0ZtzbfMTvj
j2O0t04Zc+fMsX0+f/6PjfwzkJKk45a/eLS6keTnryT/xx+LmOr9NU2kNhoy
7st/frD2kbeXF5gdcB1vIpu0dD3MtiMu4w8BAACAPaD28pfHkZEd/nrK62Vk
k7QKdN0p7HjVqO2xzvNeEcb1KmDRJajc6Lwnr5GfFZYqKVjbpb3J+wltlxFv
sa9Sv8aUH127Soa8yLZNWptleIOMbJR2YahUFtnec4r8thqhsnJSYN/0u5QL
Xnrko+W9ztkqI+pH7a6XDfMj3j4XS8dyQl5f/dKfvb+WFvnj+GSJ5WWuQn/H
Ypkx+g7eIEJvoeew7SVK/RPxthBSR7TRm2sm810nZPs7qQ5ns5Q/6WAUCbuO
F0UdvVi0Ont2nnS3e89yiyMq20or+i52Wa50vRXUwtE/ud4Z3hab9rXD8qeS
+SM7/bGQYb83Yyz87j7kLwAAAECrtfxlu9Eljh3L9gKCNxiv1Gsz6HglHX9K
lM5eEb3ElR4OqF9R9nLv+SHpLaRl2ZFoRwp/A36HCz2LySx2bEfjnAoutl9W
C3vLOtt+4tjpfjqBZKbDkStDrp9NvB2J+I9Gu2mU+H/VJa3YSMKwv0Pefcdx
w16eiYUaU1jzdsaNmPzl6MlWrm6SqLKndzq8o5NWxPWa75fqtOifEtc7mtib
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
9v1RvvodWkft7cxW2SHidriRVrKDBncxS0PKLsty5G/mUW6Z8czuA1Stctum
VcJVGo8pMv1rm6AyiGkUwJxIdarQ/2WFuAqS5SKEJ0RayMWONJLtII/HM/jg
Dm3O/3Ja8JPb6PL7d30+p3U6s+s7kgYXvLaazl4TWrLuEJsESoThzM6WHVfo
L4sniko/jecfdyWPNNEdGf5nOmWdI5aKanOoG9wsj+wmW9meiW47VqkvjD/F
2r9/2cOFnz6w7ZM5bUlmDulCci54K48+v9Z4aSNduK64sPQE/B4fp4wzTQbm
lVNpxCqzmzyaweMeq0V/WbZ3ZHk2diENfUOdf9KiH++58sw7Ljxt1BW9SVYa
yQmQLJKVTloS0phdBLmtT77pkca3vHncsHn5ZU7UTER/yY9GilZLHcTNHjZk
ZKP6Hr2YTx6J7mXbaV+E7epr8U88sS7e8zkmmDABACAR4ptFob+iglkRwV3T
xlwx747uj43te/aNY04Z+EivGwbMmztl+Yw7vnr57oYiyZ5B+AprGknLJPUa
H3fOle16jmnT/ZZfgnRnsLjENZW8v2PWSATxE9MogDmR6lSV/hI+C9u0HBHP
RoU/itnARYarwmSGlOmUUOcwNbbsXjbF/PROa9n9O5fNbkXSszJPIjk9Xl1l
z11vLPzB83/Z7gmXJoWabm6XDFEOGdJ9ZLtlN9x4P1fvWK5XhO1kyBM0pW3v
+Uos9xFXuLmvZ3MXvXj1/fuXP1y8/MHdK95oQ3Lqp59BMs6b+2Po5Tzn+dXm
m2uLi2gZ/VVWc+lTlO2pQqkgSmuDyKdoVSbcqEUaPr1Vgf6Sh7VDxVw48/PI
X/HG6M9n3rhs+h1dCGlDSJO0nE+/+e69//7rb999deMfeo678vQRvznn0iuv
PmfQY02HLmg2UOR/lR6rtFZSIvpL5uW5b9nVWYb8QspGbLqP++MPvUBG76qz
KfQXAADUMOKbRaG/osI5Ss28Wbf1eOPWFs+O633G4IktBjzfe8jY+fMn/9/s
W/7f9P4tCC9xxoVXlqhvll6PZLVrc8Hwhuc+3Pjc+zaHaL7lFFLTlvFA6iN3
NJsHVAYxjQKYE6lOFeov6XeQI9b2ooodGTtmygoJwpd9kIY2F6ycXrT0z9y7
tOy1liQzO6Mzqddz/hp7zrrit9cW7BURyFIKCeFkcieYKIzhSi8v0cq0LV25
OP7S9IasTCjdJSU8xs52Y9gcPZJZ+m5KhKfOjcqj1s79yx8oXHb/9s/msjPM
yehKsnvO22BPyzNe2GS9vu6wqAFSWh9Cc7dpdfzsUjHiuL422xOMpqsl3bqR
Qp/yP1vGBJaZ4ipffzEdWiJEqzgfJnqs7X974YZvZ9701Uv3MfHVPL1loMFJ
i75f8+ZP3/ztu7/edGW3uy5pd+dlXf74v1efdeO9zYa+3nwA11+m5Z2ek7j+
cp1WXiMz2VnAFiLLi0Z3lNxyyzaWfs7qV8IJsj9ZC9F9p5WdL4wJEwAAEiG+
WRT6KzoOUvOnmaM7vz+mycu3n3XuzePaDXzmnAG3TX995ttzJn4w6/56hFeb
ZvqLaa80XhuN/TXqcu4NJ3Ub27Hb2DyDbjRkypgvFKc0vB9UCjGNApgTqU5V
6i+LiSLP/8DhvhVHBNQ5bhQZN5jNAqa/9i571lj+4JGlD27//PXjSE52WhcS
OH/+auuV9SULV+/ZRd1q6jwm0JGiznZrMthuuLLlVlUVeWc8YHk/dUStQiZE
mMyyZCyiWVZ/2TKxVKajFrrCx3aLEPLXLOYP2wXU2cGmr31fPL1vxTNblr/V
Ii0rEDiRZHddtPrAaxsOvr6h8J2fdhV6eqFIRFYfFs/XAxpFuY9iarGZcA+1
8kUkpumKL2pI/WWJUooFXtx1oazKGL7EVBX6SyhWmwr3osO06c5/zB77zxeH
f/riw60zA/XS25Dstm//8P37q/7+z6//MuK3XR66uPl9fTpee9Vvzr1hfIuh
89sMm1/q/6ok/eXoXQzYZcOLT7IXKQyKT5gHfNrF1NzPP1L2RdOgyuGj4m0U
iX1UBnGw1FlmO9BfAABQY4hvFoX+io4Cav33lXGd3xne8NUxp3J5ldOR1D+x
2833nj7gsbNunnCEr1bL2hr5ZvAbanxLD228sHmLy+u1P7PRr4c9/tk1T3+8
j/+zWA2WWR7cYCi2ecVEVbMLJEpMowDmRKpTlfUPpRdJ74ZseKLGcNQjzHgO
bcpf8azx6b3BpQ/tWvZ6a5KbTU4j2SL/a33ozTV7d1PVzUqVyDCEfV0sdJyr
5UTrQGaH79q9Zdmhn98r2vRu8calXbLJmfVI51wR2ZyRxmaezECaXN/hrcbS
c0lGhynvrHn0/Z1PffjzAakZRJEQUfjiMHV+eeq2C2aNPXneHWe0I6QZIU1l
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
Uv3lOarK6i/rKC3JK1gxJbjs9qLPx+9cPqcVyRD1N2T8obVo9YHdrs0scctt
yLZfttvGK0hDW/d/8fSBTx/Y/eULraQjKbMeyeowadF3D3xU8PD72w6LJ5u2
YdqySl6QmfRrVs5b++XcxjJqLafDNVNWXDXlb/2e+WiX63EL8bnFKKLmIWps
zl828dDKR7aveP04Hmh4Egl0f2N1aNZG45VNzsK1vP9y0OY1EwstXvaBF9+w
LB52aK2fecd584e3f2X0KQ/ffvWfJz1585NL+k3++HCpm0h+VgVH8paUbHgz
uGbpqZnk1zn1W+ac+NiSrfcs3ffEx5t2lmbAeZ9k5eov73tRsdyOWy7S8L44
g2tJaxv3MJZ8f0/fFs9ckPnoRc1v/u2l598wnud/DZ2brw7ledM0/RVbgm7Z
sFXKHZ5G3pLhrT4aXv+lUV2byZjN+u07Dnysw9Cpp/V/eLdYwROJgPlBYxWl
X9Pir69skXtJ/XZdWvUYOfG9Pz3zzysn/+O6SZ/sFeET8H8BAEDNIb5ZFPor
Kpj+Cq6dd+sp746s9/xdZ5865LHsQYva9p+6hdJDcpEzxFdY5WdpmSFecyz4
3StjT3n3lgazbju/43mDMntNyKP0Z8fOo84Wmxcuc1y7xYz1xx1EIKZRAHMi
1alq/UV1W9cprcHu6S+2z0Ea3LBv5eTg52NL9RfP/7rgtVV09jpnwZoDu2Qa
lNzfrX/I1ZdhWOI4ps0rBf5ydOWk4s8nbFv2HO8LnJZJMtuQ+qc/8uHPd318
8N4Pth1yK8mLUhhcsRVTa9emr+b/8tWs1oQ0Yk/JbPinJ1dcNfW7m6cs3y4L
GDpGaSsuY9uRlQ8d/fTPe1bMPY6kNUw/gwQumvWj89JWOm21+frqw4c91eB4
75675q391Fz74uizF4w5Yf4dZz54+5/GTZp607QvrpuyskC62Nz3wj6H/Uc3
vxfa+Lq15r1eOaR3GukUaP7IBzvHLC188KPNu1xvmvZJVoX+snX9ZTpe9zFX
6HJf3lZqrqYl3zL9NfnCwEMXt7rhd5f1uPHu5uXpL9NzU8atv7SmXUFqbFw8
vPWHwxu+NLYb18sZhDQ4sc2QF5sMmnnakCnbXX3KznZ/yFxtmv+gRf/vDw3I
HxvWO6PFaeMmvnfN01//duoPNz3ztx2iKKJVqRIMEyYAACRCfLMo9FdUWEdp
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
duXMPV/OyPtifmO3NzFJyyBpvHU0Sedtn9mLNsvJ6pWZ25fU67b6EP02SH8q
Li7mEX+GOG03h0t48mzxNar6h9/cK/TXfX1a3fA7V3+1GfLKHuVBU4VW3GuA
Pbw/b/mMGM7nMP2+JLSq+EihPA3L4fprVKcFYzo9fNc1PW+6peXQOS2HuIqv
jNpTNU3sX9jn89bIdlPGXt31rMsa92D664mcC25n+murSYugvwAAoMYQ3ywK
/RUVvP78qnljT3t3RINp43p0GTCp/rDF7Qe9uEXaFdqPNXV/Ql3/15KRDWeN
7tHh3MFZPR9j+ouZFszA+MWxSpQdZRtaKCJIlJhGAcyJVCd19ZdXlG+3bX1H
na9o4Yob65PrAulnN+06481V45ceHL70wH0f5W336i3oncjcCYdLpaPU2rjn
q8lHl47d99nkhqQ9IReRBpe/+S2ds9qYufrwolWHXP3l7Ni37J6SZeP3fzr3
eJJVn3QhOUx/mc9ttp7fbL627oCsr2h54dBcivE3GXJocbG526Tb+dRV/P24
y4577LL69/RpJoqEiDp+/DaLZGWSDBJI59qkkVu/sVHLwbOzh77zq6EvbYtR
f+039m3927T9Kx795csZzYTe4aS7UicjjWm9TCbyAjl9SfZVpMnl3xyh/yyy
fyg5Il5FegaFb8r0PnNe5D/IfWr2ehr8z92XN35S1N+4+crLmP5qPnRei2Fz
d7pBldpJqqUxu2D3F89Efz7fHqZfHw2tLT4qS+OKjOAdb4w8/o3RHR6+6+qe
Nw9T+ssp+2rQXwAAkHLEN4tCf0WF0FOvjjntPaG/Tho4KeeWD9oMnpEnrCOR
BKGy1221P9Nfi0c2fnlMj47nDM7u+dhPDl0v+oVtdbwfUG4nhNz68/geKoOY
RgHMiVQnVfWXe+LFlG53gv+k9kpavPKaBuR/suuf2fSsOW9vGP/BvtFLDzzw
0ZbtIj8o5DnWLeX5citEHKbFa7Z9Pim4cvz+z6c2zjyJpP+G5Pzm7R/o/PX2
a5tK3l1/aKdof0ytXYdXTjA+v1for+z6vP5G7zlrhf7Ks15bJ+IPS0v2eXlP
9CgTQ9T8mZqrqP0TLfzutt+fOvbSE0ZccTYvEpKRSZjy4Pork2RyFxC7aUhI
M/FHMnOOGzyz3q3vdRg0/ecY9Ve+UbD+ry/vWPn0hhUzmwq3Gv/eskTbadft
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
/Xda8tW19cn/5jQ5vfk5vf74VJuBixsNXXzCEJ455VX4MWWvLUsczWsCzV59
/ewRXZeMbDtzZK+OZ15f/8InM7rf8T2lbLbJc+xthiHLJ1Jrf8HySUf5Gb7c
Lp3kpHckmWctWEtf2kif22i9uvlAPnce8UbNnsDbfzjvzdCml+iaV3plkwsz
SLf0jFYNTpr61k9//suhP38impp5AifksDms0KFbqb2aFn9/72XHTboo+9a+
p3UdPI3pr04Dp8Va/9DTX+zDN8WtVxKkVPIYbtUjT7lYovG9GwBo2dI/ZVul
Eol9kJa1lVqraMnX917WePKlaQ9c1HjA7/r2vv7uloMXMAmm6y+b91kOSf3F
W13zSdqM9Xy8WAhb+r+4/hrVTumvZsNecV8R+gsAAFKZ+GZR6K+oEP2XuT9r
WIMXx3Y/ddCkBrcs7jBoel65/i8euLKfmqteGXXau0MbzhlzXrtz++de+tC3
QbqZ2kyy7TRsXX+ZykAACRPTKIA5keqkqP7ip82TiIKU7rfMvKD5HRMF/5NL
/lSfnNO802+uHv+r66d1HDT75P5PsBlmn/CTOeJ8mMKwecibbTF1YBu0ZC8t
WT17TM9Xh5869barW503mFw0Kfuie7636UaT7rJC7OhuFFzJ3n1fPHN4+aM7
lr3YkZDm6S1ITtf5PzjTN9IpG+isjUf28lcpdgUerydUcGTLW+bPs+jGhT2z
yKVp5Nz0+q0bnTr1nVW3/+XA7R9vz5eOMvFBiNoTvEMHNf9Di/41/oq29/Zp
1f93F3W66TmuvwZM3RK//uJ/jk/suDGHbuSf5uRyXL0lLgpT+K9ESX35lGLb
2cKFadG/mP6adAF5pG+L6y/v3fOG8a2GLGwz7I097vcuYgkdyy2cIbxqll3i
eCcT5fmopDE3gtHVXzz/q3t/6C8AAKg9xDeLQn9FBdNfxT++evuZH45sMWNc
7843P5wzaFGngdO3leY1eMnaHIP3KjVWv3zraR/d1v7FET06dO+Xc8F9ayjd
6BhMf203hf7inZdtq7RsIqgEYhoFMCdSnZTVX8p05zXeDaaxzPXfzRj647QB
y6eP562Ns5uSQEeSfdqk99c/8MEvjy9eWyzOx6LF4i9InUJq7tn85evbv3ql
PSFteQn0wP3vbxv14ZEJH2zaJgrHM/1RxL048mULjLUL6bq5dP1752STrhnZ
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
AQYUq8rb7Zb9Q2AOEZYIDpPSv6CnxLADAJCoNK+XqaVzh+BoWXkHAGAQ0cLK
0ygTAADgIKVzretar89O3VYIXyE38gAAZHk5RyVejcAAAACOEJOvUsGcOwQA
AHCc6FztERyGXwAAAIeKTxCjjtmfAgAA8O9i8tUWLuULAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAmMsvQhFOGQ==
    "], {{0, 648}, {1152, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", ImageResolution -> {120, 120}, Interleaving -> 
    True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{336., Automatic},
  ImageSizeRaw->{1152, 648},
  PlotRange->{{0, 1152}, {0, 648}}]], "Input",ExpressionUUID->"d6dfdf78-7eec-\
414e-b3be-310a3b4ba2fa"],

Cell["\<\
The code starts by defining the first case of the recursive function and then \
on the next gates it runs through the different combinations with tuples to \
generate all of the outcomes. It also creates NAND trees with half of the \
amount of NAND implemented and it doesn\[CloseCurlyQuote]t know what to do \
with an odd amount of gates so \[OpenCurlyDoubleQuote]nandTreeCreate\
\[CloseCurlyDoubleQuote] was implemented to fix that by multiplying the input \
by two.\
\>", "Text",
 CellChangeTimes->{{3.7404979557072945`*^9, 3.740497968343523*^9}, {
  3.7404993730240965`*^9, 3.740499376245483*^9}, {3.7404994779087005`*^9, 
  3.740499478240817*^9}},ExpressionUUID->"4ed9f5e7-7243-4169-aabd-\
8d68c89f4483"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "nandTreeGenerate"}], ";"}]], "Input",
 CellChangeTimes->{{3.740500343122664*^9, 3.740500344742335*^9}, {
  3.74050037495656*^9, 
  3.740500378293641*^9}},ExpressionUUID->"a1eb5ff6-3ad1-4185-b9a2-\
9d8f82705c92"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nandTreeGenerate", "[", "0", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", 
    RowBox[{"!", "a"}], ",", 
    RowBox[{"!", "b"}], ",", 
    RowBox[{"!", "c"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7400641409751263`*^9, 3.7400641492878647`*^9}, {
  3.740068168622161*^9, 3.740068178270197*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"b4f9e5ec-7409-4dc5-bcba-a00bc16e086f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nandTreeGenerate", "[", "nGates_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"subtrees", " ", "=", " ", 
      RowBox[{"nandTreeGenerate", "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", 
         RowBox[{"nGates", "-", "1"}]}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Join", "@@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Nand", "@@@", 
        RowBox[{"Tuples", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"subtrees", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"subtrees", "[", 
            RowBox[{"[", 
             RowBox[{"nGates", "-", "i"}], "]"}], "]"}]}], "}"}], "]"}]}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"nGates", "-", "1"}]}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.739966290898769*^9, 3.739966296465357*^9}, {
   3.7399775015172844`*^9, 3.739977514001643*^9}, {3.739977580202561*^9, 
   3.7399775814748*^9}, {3.739979550164486*^9, 3.7399795673114023`*^9}, {
   3.739979625362176*^9, 3.739979631440833*^9}, {3.7399803810583935`*^9, 
   3.7399803815178566`*^9}, {3.739980434625789*^9, 3.7399804360274057`*^9}, {
   3.7399806604641876`*^9, 3.7399806655556912`*^9}, {3.73998070920059*^9, 
   3.7399807103018312`*^9}, {3.739980758229416*^9, 3.7399808701452875`*^9}, {
   3.7399809043877*^9, 3.739980916749524*^9}, {3.739981754988738*^9, 
   3.7399817823106546`*^9}, {3.739982328365971*^9, 3.739982358963915*^9}, {
   3.7399835245084157`*^9, 3.7399835273741302`*^9}, {3.7399836447300425`*^9, 
   3.739983646771529*^9}, {3.739983680482207*^9, 3.739983684454674*^9}, {
   3.739984328324881*^9, 3.739984350207425*^9}, {3.7399843868539577`*^9, 
   3.739984401355517*^9}, {3.7399844995657635`*^9, 3.7399845270956697`*^9}, {
   3.739984615329495*^9, 3.7399846633291764`*^9}, {3.7399847253517213`*^9, 
   3.7399848483310814`*^9}, {3.739985009459064*^9, 3.7399850588874474`*^9}, {
   3.7399854038626986`*^9, 3.739985479806785*^9}, {3.7399855163803625`*^9, 
   3.7399855574069*^9}, {3.739985643128151*^9, 3.7399856454325657`*^9}, {
   3.7399857904618464`*^9, 3.739985797334421*^9}, {3.7399858656149435`*^9, 
   3.73998586920126*^9}, {3.739986165533657*^9, 3.739986167270154*^9}, {
   3.7399862125731707`*^9, 3.739986222631686*^9}, {3.73998644017307*^9, 
   3.739986506326481*^9}, {3.739986546518489*^9, 3.7399865521961656`*^9}, {
   3.7399866132512503`*^9, 3.7399866136321735`*^9}, {3.7399868409053173`*^9, 
   3.7399868446763716`*^9}, {3.739986895163863*^9, 3.739986903013604*^9}, {
   3.7399872233821545`*^9, 3.7399873063834085`*^9}, {3.7399873569477744`*^9, 
   3.7399873625491943`*^9}, {3.739991785163275*^9, 3.7399918077054167`*^9}, {
   3.739992041616007*^9, 3.7399920467636595`*^9}, {3.7399932615722756`*^9, 
   3.739993294948904*^9}, {3.7399935313858304`*^9, 3.7399935483441896`*^9}, {
   3.739993732451888*^9, 3.7399937331170244`*^9}, 3.739994301734782*^9, {
   3.7399946194254127`*^9, 3.7399946575559363`*^9}, {3.739994736239511*^9, 
   3.739994743868377*^9}, {3.7399969551853976`*^9, 3.739997025737596*^9}, {
   3.740044448495858*^9, 3.7400444580062056`*^9}, {3.740044904047804*^9, 
   3.740044912295251*^9}, {3.740045493077365*^9, 3.7400455985344577`*^9}, {
   3.74004575691875*^9, 3.740045760203086*^9}, {3.740045930299828*^9, 
   3.7400459351126423`*^9}, {3.740046040054482*^9, 3.740046040509554*^9}, {
   3.740046312266364*^9, 3.7400463345242653`*^9}, {3.74004638618734*^9, 
   3.7400465082483997`*^9}, {3.74004663238694*^9, 3.740046636998439*^9}, {
   3.740047393140856*^9, 3.740047399497713*^9}, {3.7400475869990163`*^9, 
   3.7400477896716766`*^9}, {3.7400478323735223`*^9, 3.740047880338676*^9}, {
   3.7400481427255077`*^9, 3.7400481992239933`*^9}, {3.740048373184486*^9, 
   3.7400483832755013`*^9}, {3.740048551143669*^9, 3.7400485576521907`*^9}, {
   3.7400486312626333`*^9, 3.740048657495266*^9}, {3.7400500202348576`*^9, 
   3.7400500768201017`*^9}, {3.740050140203127*^9, 3.7400501555541344`*^9}, {
   3.740050294179871*^9, 3.7400503065344477`*^9}, 3.740051194735976*^9, {
   3.7400522754136295`*^9, 3.7400523570446873`*^9}, {3.7400524479895983`*^9, 
   3.7400524642279153`*^9}, {3.7400525096819296`*^9, 
   3.7400525537842484`*^9}, {3.7400526758444777`*^9, 3.740052681009985*^9}, {
   3.7400527450748043`*^9, 3.7400527575594916`*^9}, {3.740052792379631*^9, 
   3.740052806906376*^9}, {3.7400544227468314`*^9, 3.740054423089772*^9}, 
   3.7400544775053034`*^9, {3.7400549924114404`*^9, 3.7400549952802477`*^9}, {
   3.7400553180997653`*^9, 3.740055319342596*^9}, {3.7400559033502235`*^9, 
   3.740055903453285*^9}, {3.7400629990649996`*^9, 3.740063007519092*^9}, {
   3.7400630887324486`*^9, 3.7400630899172297`*^9}, {3.7400632187718725`*^9, 
   3.740063260850639*^9}, {3.740063734144452*^9, 3.74006373777127*^9}, {
   3.7400639402433343`*^9, 3.7400639433648367`*^9}, {3.7400640461813574`*^9, 
   3.740064071078476*^9}, {3.740064114325076*^9, 3.740064114447934*^9}, {
   3.740064234866082*^9, 3.740064242632948*^9}, {3.7400645621066303`*^9, 
   3.74006458514248*^9}, {3.740064680175175*^9, 3.7400647027915897`*^9}, {
   3.740065137250222*^9, 3.7400651423259*^9}, {3.740065385851138*^9, 
   3.740065427217453*^9}, {3.740066340844701*^9, 3.7400663463295856`*^9}, {
   3.7400692734577317`*^9, 3.740069305439764*^9}, {3.7400694392241845`*^9, 
   3.740069574490421*^9}, {3.7400696174813547`*^9, 3.7400696606931095`*^9}, {
   3.740069994759715*^9, 3.7400700382670326`*^9}, {3.740070438296872*^9, 
   3.740070448739047*^9}, {3.7400704826814384`*^9, 3.740070495501483*^9}, {
   3.740070531802469*^9, 3.74007054456548*^9}, {3.740070583371447*^9, 
   3.7400706223977537`*^9}, {3.740070711411654*^9, 3.7400707170264077`*^9}, {
   3.740071030898426*^9, 3.740071051369746*^9}, {3.7400733883578568`*^9, 
   3.740073404007826*^9}, {3.740078439889884*^9, 3.740078445302672*^9}, {
   3.7400789239918365`*^9, 3.740078962678005*^9}, {3.7400790262524357`*^9, 
   3.7400790370182505`*^9}, {3.7400792171509547`*^9, 3.740079246215696*^9}, {
   3.740079333274988*^9, 3.7400793335663347`*^9}, {3.7400799328232775`*^9, 
   3.740079940261331*^9}, {3.740083915170352*^9, 3.740083921156323*^9}, {
   3.740085514813841*^9, 3.7400855499950705`*^9}, {3.740085623532547*^9, 
   3.7400856470850625`*^9}, {3.740085686319313*^9, 3.740085701103072*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"4149f97f-87fd-4945-829e-71cd75128fc4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "nandTreeCreate"}], ";"}]], "Input",
 CellChangeTimes->{{3.740500381450201*^9, 
  3.740500384891001*^9}},ExpressionUUID->"f744f5d4-b68d-4c8c-b6c0-\
1323f79aa2b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nandTreeCreate", "[", "nGates_", "]"}], ":=", 
  RowBox[{"nandTreeGenerate", "[", 
   RowBox[{"nGates", "*", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7400702840993567`*^9, 3.740070339082492*^9}, {
  3.7400709250411396`*^9, 3.7400709368303013`*^9}, {3.7400710596132097`*^9, 
  3.7400710648931603`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"4c9986e4-529a-41e5-83b3-d78d2f3bd696"],

Cell["\<\
This works super well at generating solutions but it\[CloseCurlyQuote]s very \
computationally intensive so the next step that I took was creating one that \
takes less processing power. This new version gets rid of duplicate cases by \
defining a new NAND function that returns null for trivial cases.\
\>", "Text",
 CellChangeTimes->{{3.740499576444287*^9, 
  3.740499773452602*^9}},ExpressionUUID->"264593fd-d8c8-47bb-8774-\
e17f5ff55325"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Example", "*)"}], " ", 
  RowBox[{"Xor", "[", 
   RowBox[{"a", ",", 
    RowBox[{"!", "a"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.740499756906872*^9, 3.7404997826420355`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"64b0b3cd-229c-4baa-b699-3b1746afc00d"],

Cell[BoxData[
 RowBox[{"a", "\[Xor]", 
  RowBox[{"!", "a"}]}]], "Output",
 CellChangeTimes->{3.740499786817883*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"8915d7ed-d6ff-4ec8-aa14-cc5365a44a35"]
}, Closed]],

Cell["\<\
 It also creates a new version of tuples that uses this nand equation.\
\>", "Text",
 CellChangeTimes->{{3.7404998039181576`*^9, 
  3.7404998122458944`*^9}},ExpressionUUID->"48df91ab-3e6b-4af4-be91-\
a17b5e383b04"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "@", "nand"}], ";"}]], "Input",
 CellLabel->"In[41]:=",ExpressionUUID->"07320cc6-9605-41d5-84d6-373fe36f63da"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nand", "[", 
    RowBox[{"a_", ",", "a_"}], "]"}], ":=", "Null"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nand", "[", 
    RowBox[{"a_", ",", 
     RowBox[{"!", "a_"}]}], "]"}], ":=", "Null"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nand", "[", 
    RowBox[{
     RowBox[{"!", "a_"}], ",", "a_"}], "]"}], ":=", "Null"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"nand", "[", 
     RowBox[{"a_", ",", "b_"}], "]"}], "/;", 
    RowBox[{"OrderedQ", "[", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], "]"}]}], ":=", 
   RowBox[{"Sow", "@", 
    RowBox[{"Nand", "[", 
     RowBox[{"a", ",", "b"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nand", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", "Null"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7400878262268953`*^9, 3.740088065860752*^9}, {
   3.7400882606398478`*^9, 3.740088345841617*^9}, {3.740088391287834*^9, 
   3.7400884055501966`*^9}, {3.7400884934871535`*^9, 3.740088560420331*^9}, {
   3.740089131489731*^9, 3.7400891569183826`*^9}, {3.740089854731819*^9, 
   3.740089861925953*^9}, 3.7400899655110216`*^9, {3.7400932943739395`*^9, 
   3.740093297705575*^9}, {3.740500148466054*^9, 3.7405001496578674`*^9}, {
   3.7405003547475863`*^9, 3.7405003566794214`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"8b987b1f-2c65-44a8-a377-4652b9be2203"],

Cell[BoxData[
 RowBox[{"Clear", "@", "nandTuples"}]], "Input",
 CellChangeTimes->{{3.740500365403102*^9, 3.7405003686723623`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"1b23889c-d2eb-42db-8cb1-46f75bfc8d3c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nandTuples", "[", 
   RowBox[{"list1_", ",", "list2_"}], "]"}], ":=", 
  RowBox[{"Replace", "[", 
   RowBox[{
    RowBox[{"Reap", "[", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"nand", "[", 
        RowBox[{"a", ",", "b"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "list1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", "list2"}], "}"}]}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"_", ",", 
         RowBox[{"{", "x_", "}"}]}], "}"}], "\[RuleDelayed]", "x"}], ",", 
      RowBox[{"_", "\[RuleDelayed]", 
       RowBox[{"{", "}"}]}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7400886102510257`*^9, 3.740088690955063*^9}, {
  3.7400888145442724`*^9, 3.7400888310562162`*^9}, {3.740089241977727*^9, 
  3.7400892778473005`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"e65bb241-0559-4aa2-a92e-d95f0b76c1a9"],

Cell[BoxData[
 RowBox[{"Clear", "@", "nandTreeGenerate"}]], "Input",
 CellChangeTimes->{{3.7405003996096535`*^9, 
  3.7405004042113523`*^9}},ExpressionUUID->"8aafdb6c-f2b2-4048-9585-\
1ac33af4e574"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"nandTreeGenerate", "[", "0", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]", ",", 
     RowBox[{"!", "\[FormalA]"}], ",", 
     RowBox[{"!", "\[FormalB]"}], ",", 
     RowBox[{"!", "\[FormalC]"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.740129091852337*^9, {3.7401384645152445`*^9, 3.7401384747980986`*^9}, {
   3.7401392737366953`*^9, 3.740139274399847*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"4fbca12c-45f6-4192-be3c-a57e72e6cbb9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nandTreeGenerate", "[", "nGates_", "]"}], ":=", 
  RowBox[{
   RowBox[{"nandTreeGenerate", "[", "nGates", "]"}], "=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"subtrees", " ", "=", " ", 
       RowBox[{"nandTreeGenerate", "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{"nGates", "-", "1"}]}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Join", "@@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"nandTuples", "[", 
         RowBox[{
          RowBox[{"subtrees", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"subtrees", "[", 
           RowBox[{"[", 
            RowBox[{"nGates", "-", "i"}], "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"nGates", "-", "1"}]}], "}"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.740089358575794*^9, 3.740089422911091*^9}, {
  3.7400900034395714`*^9, 3.7400900350037756`*^9}, {3.740093372472322*^9, 
  3.7400933772089105`*^9}, {3.740093407657601*^9, 3.7400934256142864`*^9}, {
  3.7400947974291706`*^9, 3.7400948072310076`*^9}, {3.7401392759905167`*^9, 
  3.7401392824767027`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"a4ec1170-19bb-4d44-89a1-c8b4ceb9d66c"],

Cell[BoxData[
 RowBox[{"Clear", "@", "nandTreeCreate"}]], "Input",
 CellChangeTimes->{{3.7405004133938055`*^9, 
  3.7405004155789623`*^9}},ExpressionUUID->"ff031b0d-4afc-4981-880f-\
1a146e7fcb60"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nandTreeCreate", "[", "nGates_", "]"}], ":=", 
  RowBox[{"nandTreeGenerate", "[", 
   RowBox[{"nGates", "*", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7400935993226876`*^9, 3.740093601995838*^9}, {
  3.740094813914359*^9, 3.740094818555455*^9}, {3.7401392867140236`*^9, 
  3.7401392909513445`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"97fba2f4-1df0-4a12-9137-4d8e5329be65"],

Cell["\<\
When testing my code I used the following function to compare the outputs to \
XOR\
\>", "Text",
 CellChangeTimes->{{3.7404998738173046`*^9, 
  3.740499911723953*^9}},ExpressionUUID->"0036c1b0-27fa-479e-95ca-\
1e4e01d9be58"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"nandTreeCreate", "[", "2", "]"}], ",", 
   RowBox[{
    RowBox[{"TautologyQ", "[", 
     RowBox[{"Equivalent", "[", 
      RowBox[{
       RowBox[{"Xor", "[", 
        RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "]"}], 
       ",", "#"}], "]"}], "]"}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7400734819029264`*^9, 3.7400734898480988`*^9}, {
  3.7400736345219*^9, 3.7400736636905384`*^9}, {3.7400791741689787`*^9, 
  3.740079175979824*^9}, {3.740093681643012*^9, 3.740093683756017*^9}, {
  3.7400946577129607`*^9, 3.740094677922244*^9}, {3.7400948607992606`*^9, 
  3.740094867977905*^9}, {3.7401291333581915`*^9, 3.740129200411581*^9}, {
  3.7401349407815585`*^9, 3.740134945758947*^9}, {3.7401373432960997`*^9, 
  3.740137367209361*^9}, {3.7401384283641963`*^9, 3.740138428983432*^9}, {
  3.7401384807464485`*^9, 3.74013848094336*^9}, {3.740157421388197*^9, 
  3.740157422163972*^9}, {3.7405000634533234`*^9, 3.7405000642053127`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"a998b59b-6e1c-4184-9db9-6ec19ba0cb1c"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.7405000649024563`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"c895e48f-8d97-478d-a0bf-804535361872"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Multi-Input Tree Generation", "Subsection",
 CellChangeTimes->{{3.740499958657481*^9, 
  3.7404999702913876`*^9}},ExpressionUUID->"6c0b20f8-486a-43c5-a7e4-\
ecd02a8316fb"],

Cell["\<\
By inputting the amount of leaves into the recursive function, I was able to \
expand it in order to account for more than two input NAND gates. This uses \
the same general structure as the two input NAND generate function except it \
is based on integer partitions to find all of the different combinations.\
\>", "Text",
 CellChangeTimes->{
  3.740500080236456*^9},ExpressionUUID->"158d0503-3233-4b11-878d-\
d16e9a30b960"],

Cell[BoxData[
 RowBox[{"Clear", "@", "nand"}]], "Input",
 CellChangeTimes->{{3.7405004286649885`*^9, 3.740500430608783*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"9dda3d1c-3beb-48b1-ab84-5e875e00bcdf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nand", "[", "arg_", "]"}], ":=", 
   RowBox[{"Nand", "[", "arg", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"nand", "[", "args___", "]"}], "/;", 
    RowBox[{"Equivalent", "[", "args", "]"}]}], ":=", "Null"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"nand", "[", "args___", "]"}], "/;", 
    RowBox[{"OrderedQ", "[", 
     RowBox[{"{", "args", "}"}], "]"}]}], ":=", 
   RowBox[{"Nand", "[", "args", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nand", "[", "args___", "]"}], ":=", "Null"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7400878262268953`*^9, 3.740088065860752*^9}, {
   3.7400882606398478`*^9, 3.740088345841617*^9}, {3.740088391287834*^9, 
   3.7400884055501966`*^9}, {3.7400884934871535`*^9, 3.740088560420331*^9}, {
   3.740089131489731*^9, 3.7400891569183826`*^9}, {3.740089854731819*^9, 
   3.740089861925953*^9}, 3.7400899655110216`*^9, {3.7400932943739395`*^9, 
   3.740093297705575*^9}, {3.7401408805944433`*^9, 3.740140939852479*^9}, {
   3.740141037034131*^9, 3.740141040638062*^9}, {3.7401499701018076`*^9, 
   3.740150055398631*^9}, {3.740150114795757*^9, 3.740150170774592*^9}, {
   3.7401602853910265`*^9, 3.740160287274335*^9}, {3.74016068529101*^9, 
   3.7401606983992805`*^9}, {3.7401656162199326`*^9, 3.740165617441329*^9}, {
   3.7401774796646223`*^9, 3.740177483607294*^9}, {3.74017916173713*^9, 
   3.7401791989958057`*^9}, {3.740179409750001*^9, 3.740179514589952*^9}, {
   3.740179596873459*^9, 3.7401795975650043`*^9}, {3.7401798038532963`*^9, 
   3.740179828283388*^9}, {3.7401799729895086`*^9, 3.7401799740059824`*^9}, {
   3.740180223759038*^9, 3.7401803087335453`*^9}, {3.740181562918867*^9, 
   3.74018156506598*^9}, {3.7405001353940005`*^9, 3.740500136256709*^9}, {
   3.740500424012416*^9, 3.7405004248681297`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"6d4e6c41-5918-43e4-b454-350810e84484"],

Cell[BoxData[
 RowBox[{"Clear", "@", "nandTuples"}]], "Input",
 CellChangeTimes->{{3.740500433985754*^9, 
  3.740500438922556*^9}},ExpressionUUID->"544d7fba-7c00-4562-ae81-\
89dc55ecd88a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nandTuples", "[", "l_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"nand", "@@", "#"}], ")"}], "&"}], "/@", 
   RowBox[{"Tuples", "[", "l", "]"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzj1IQmEAhWGJNCkS9ZJDkJZEQYENRZAkZpQVREGEg1cahAhcEhKCoMb+
qQxapIaGcEnJMCmMUDC7kiBqIpSiBf2IEBJUICF95xsOz3Z4W8zzU7NVPB6v
kQzOCUdbndmiLr87o4JuS1wDV6PPWrg5pl2Asib/IuyJGQMBYskmikCD5FQa
JDKuSQYm3cJQiGjkfFRp+i0KzUvDCSiTFx7h2SebhSKFgn+Lv0NPPVwT9PfC
gQ6rGv42HAvCxKtUimqLqSUwYeti4MiGaRrusXoDtIhXjNDqqmWho/v9BHpv
Lp0w8sM9ccQ22wd1MCPPw2Cu8AIPGI09Qay+/tqH/HjYA4U+3Tlszn1HobLY
F4OdheU0fK0pU5XbjjIcMv1R8xnveJIo5tgJWHEeXUCB/Z6q4rf74V1FQy1t
6ese0Lu+Q/0Hs/T8jA==
  "],
 CellLabel->
  "In[321]:=",ExpressionUUID->"d8a043c0-fa08-4654-927f-c0a6c18c8ad1"],

Cell[BoxData[
 RowBox[{"Clear", "@", "nandTreeGenerate"}]], "Input",
 CellChangeTimes->{{3.7405004438443975`*^9, 
  3.7405004491462297`*^9}},ExpressionUUID->"aa522235-4c16-44c2-9605-\
58473d75bff5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"nandTreeGenerate", "[", "1", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.740129091852337*^9, {3.7401384645152445`*^9, 3.7401384747980986`*^9}, {
   3.7401392737366953`*^9, 3.740139274399847*^9}, {3.740177570765684*^9, 
   3.7401775763420305`*^9}},
 CellLabel->
  "In[322]:=",ExpressionUUID->"6a76de67-3c27-46be-a56f-2dc50c18e502"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nandTreeGenerate", "[", "nLeaves_", "]"}], ":=", 
  RowBox[{
   RowBox[{"nandTreeGenerate", "[", "nLeaves", "]"}], 
   SubscriptBox["=", 
    SubscriptBox["\[Placeholder]", "\[Placeholder]"]], "\[IndentingNewLine]", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"subtrees", " ", "=", " ", 
         RowBox[{"nandTreeGenerate", "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", 
            RowBox[{"nLeaves", "-", "1"}]}], "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Join", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"nandTuples", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
               "subtrees", "\[LeftDoubleBracket]", "#", 
                "\[RightDoubleBracket]"}], "&"}], "/@", "#"}], "]"}], ")"}], 
           "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{"IntegerPartitions", "[", 
            RowBox[{"nLeaves", "-", "1"}], "]"}], ")"}]}], ")"}]}]}], 
      "\[IndentingNewLine]", "]"}], ",", "Null"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.740089358575794*^9, 3.740089422911091*^9}, {
   3.7400900034395714`*^9, 3.7400900350037756`*^9}, {3.740093372472322*^9, 
   3.7400933772089105`*^9}, {3.740093407657601*^9, 3.7400934256142864`*^9}, {
   3.7400947974291706`*^9, 3.7400948072310076`*^9}, {3.7401392759905167`*^9, 
   3.7401392824767027`*^9}, {3.7401411703473516`*^9, 
   3.7401411998503866`*^9}, {3.740141230322606*^9, 3.7401412605116053`*^9}, {
   3.740141858670493*^9, 3.7401418934400263`*^9}, {3.740141958328151*^9, 
   3.7401421593705826`*^9}, 3.740142244429514*^9, 3.7401423125446105`*^9, {
   3.740142395481656*^9, 3.740142427663583*^9}, {3.7401485937507114`*^9, 
   3.740148673395565*^9}, {3.740148730980209*^9, 3.7401488286310635`*^9}, {
   3.740148864732707*^9, 3.7401488880495806`*^9}, {3.7401489344661036`*^9, 
   3.740148952434746*^9}, 3.7401491042759333`*^9, {3.740149154368368*^9, 
   3.740149155077711*^9}, {3.740150538631146*^9, 3.740150580649478*^9}, {
   3.7401511211168756`*^9, 3.740151151733919*^9}, {3.740151232951744*^9, 
   3.74015131868342*^9}, {3.7401513626102915`*^9, 3.740151383228791*^9}, {
   3.740151471419711*^9, 3.740151522515459*^9}, {3.7401515665814037`*^9, 
   3.7401515939268103`*^9}, 3.7401517507930346`*^9, {3.7401520136904488`*^9, 
   3.7401520169133654`*^9}, {3.740152365634137*^9, 3.7401523678778505`*^9}, 
   3.740152398528973*^9, {3.74015244431304*^9, 3.740152445527913*^9}, {
   3.7401525828935585`*^9, 3.7401525830850143`*^9}, 3.7401569870481224`*^9, 
   3.7401570274257603`*^9, {3.7401776036521745`*^9, 3.7401776703608294`*^9}, {
   3.7401778150352807`*^9, 3.7401778201732335`*^9}, {3.740179889136923*^9, 
   3.7401799078583035`*^9}, {3.7401800215965753`*^9, 3.740180032328667*^9}, {
   3.740180074686116*^9, 3.7401800748110914`*^9}, {3.740180565891904*^9, 
   3.740180576598081*^9}, {3.740180993607832*^9, 3.7401809976225963`*^9}, {
   3.7401811074573545`*^9, 3.7401811211963477`*^9}, {3.740181294431724*^9, 
   3.7401813130768943`*^9}, {3.7404841198371525`*^9, 
   3.7404841214717846`*^9}},ExpressionUUID->"6ec70d06-6012-42ba-957c-\
c0715c5befe6"],

Cell["\<\
This works super well but it\[CloseCurlyQuote]s still computationally \
intensive and I figured out later that some of the logic must be wrong since \
it misses a couple of cases every once and awhile. It\[CloseCurlyQuote]s \
still good for getting a basic idea of the different cases that come from \
different leaf counts though.\
\>", "Text",
 CellChangeTimes->{
  3.740500163939686*^9},ExpressionUUID->"1ac92048-746d-4aa6-bb49-\
6002e6300400"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Random Generation", "Subsection",
 CellChangeTimes->{{3.7405001706218233`*^9, 
  3.740500173985839*^9}},ExpressionUUID->"1c33e6b9-d1b0-4bde-9e57-\
3bcb8ff99885"],

Cell["\<\
It seems that the best way to generate expressions computationally comes from \
random generation. This is because it can be stopped and started within a \
time limit even though it doesn\[CloseCurlyQuote]t get every possible \
expression. In order to implement this I used a function that inserts either \
a NAND gate or a variable at a random spot within the expression.\
\>", "Text",
 CellChangeTimes->{
  3.7405001893587313`*^9},ExpressionUUID->"350bccc9-1bbc-4e81-9f26-\
2506796cb1be"],

Cell[BoxData[
 RowBox[{"Clear", "@", "varlist"}]], "Input",
 CellChangeTimes->{{3.740500467998824*^9, 3.7405004707923555`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"1056575b-e96c-451d-a488-38b6db044b5f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"varlist", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7402447156574907`*^9, 3.7402447213718*^9}, 
   3.740244830291555*^9, 3.7402653139967427`*^9, {3.740342984693112*^9, 
   3.7403430041620226`*^9}, {3.7403977457255397`*^9, 3.740397745917985*^9}, {
   3.7405004852367735`*^9, 3.740500485973772*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"48686a5b-d9d7-4091-9a3a-d0423ae3de09"],

Cell[BoxData[
 RowBox[{"Clear", "@", "addSomething"}]], "Input",
 CellChangeTimes->{{3.7405004922938747`*^9, 3.7405004947263823`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"02d91a3a-6bb5-40aa-b0fe-220634b6bd15"],

Cell[BoxData[
 RowBox[{
  RowBox[{"addSomething", "[", "ex_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "positions", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"positions", " ", "=", " ", 
      RowBox[{"Position", "[", 
       RowBox[{"ex", ",", " ", "_myNand", ",", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "Infinity"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Insert", "[", 
      RowBox[{"ex", ",", 
       RowBox[{"RandomChoice", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{".2", ",", ".7", ",", ".7", ",", ".7"}], "}"}], "\[Rule]", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"myNand", "[", "]"}], "}"}], ",", "varlist"}], "]"}]}], 
        "]"}], ",", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"RandomChoice", "[", "positions", "]"}], ",", "1"}], "]"}]}],
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.740244016868515*^9, 3.740244126314994*^9}, {
   3.740244187585926*^9, 3.740244199638564*^9}, {3.740244240209186*^9, 
   3.7402442450146503`*^9}, 3.740244329435688*^9, {3.740244411861706*^9, 
   3.740244457086198*^9}, {3.740244522142294*^9, 3.7402445250253677`*^9}, {
   3.7402447253342323`*^9, 3.740244763747141*^9}, 3.740244812722323*^9, {
   3.7402448586022787`*^9, 3.740244875389709*^9}, {3.740322091293233*^9, 
   3.7403221155772133`*^9}, {3.7403221551184626`*^9, 
   3.7403222270153327`*^9}, {3.740397814184251*^9, 3.7403978145323167`*^9}, {
   3.74039785751628*^9, 3.740397859481064*^9}, {3.740398924432034*^9, 
   3.7403989253645372`*^9}, {3.7403992839931917`*^9, 3.74039928485393*^9}, {
   3.7403993983742046`*^9, 3.7403994108936605`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"68969807-6781-492a-b1f2-a660f3bfdaad"],

Cell[BoxData[
 RowBox[{"Clear", "@", "makeTree"}]], "Input",
 CellChangeTimes->{{3.7405004978001537`*^9, 3.7405005005577836`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"65c86eb7-70f0-4928-8c04-5c8410ac2c2c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"makeTree", "[", "nLeaves_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Last", "@", 
       RowBox[{"NestList", "[", 
        RowBox[{"addSomething", ",", 
         RowBox[{"myNand", "[", "]"}], ",", 
         RowBox[{"nLeaves", "-", "1"}]}], "]"}]}], ")"}], "/.", 
     RowBox[{
      RowBox[{"myNand", "[", "]"}], "\[RuleDelayed]", 
      RowBox[{"RandomChoice", "[", "varlist", "]"}]}]}], ")"}], " ", "/.", 
   " ", 
   RowBox[{"myNand", "\[Rule]", "Nor"}]}]}]], "Input",
 CellChangeTimes->{{3.740244116616603*^9, 3.740244173114025*^9}, {
  3.7402442551209793`*^9, 3.740244319262849*^9}, {3.740244472609384*^9, 
  3.740244490165711*^9}, {3.740244613543975*^9, 3.740244615843395*^9}, {
  3.740244670080104*^9, 3.7402446888847322`*^9}, {3.740244736663514*^9, 
  3.740244737928927*^9}, {3.7402658167429295`*^9, 3.740265830343538*^9}, {
  3.7403422318603077`*^9, 3.7403422324277563`*^9}, {3.740398021948348*^9, 
  3.740398023297777*^9}, {3.7403984148072844`*^9, 3.7403984166254253`*^9}, {
  3.740399152391342*^9, 3.7403991528770165`*^9}, {3.7403995113808546`*^9, 
  3.740399512009136*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"b2d15e3a-bb76-46ba-a58a-3943d8f556aa"],

Cell[BoxData[
 RowBox[{"Clear", "@", "randTreeGenerate"}]], "Input",
 CellChangeTimes->{{3.740500503267538*^9, 3.740500508083663*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"1f7ef065-8d93-4eb6-833c-378371ea6fb7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"randTreeGenerate", "[", 
   RowBox[{"nLeaves_", ",", "nTimes_"}], "]"}], ":=", 
  RowBox[{"makeTree", "/@", 
   RowBox[{"Table", "[", 
    RowBox[{"nLeaves", ",", "nTimes"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7402658023154984`*^9, 3.740265814013192*^9}, {
  3.740265935819605*^9, 3.7402659870007963`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"584f269d-c393-4970-a0b2-dcaf59b172e2"],

Cell["\<\
Although this is good for generating most functions, some cases become \
increasingly unlikely as it adds more terms. This makes it necessary to \
adjust the weights for NANDs and variables so that all of the cases have an \
equal chance of occurring. I didn\[CloseCurlyQuote]t have enough time to find \
the right values so eventually I setup the weights as random integers so that \
it would have a good distribution for each of the different weight \
combinations.\
\>", "Text",
 CellChangeTimes->{
  3.7405005291752768`*^9},ExpressionUUID->"68540293-77e2-493e-af77-\
333faa0ca65e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualizing the Data", "Subsection",
 CellChangeTimes->{{3.7405005362762938`*^9, 
  3.7405005425654793`*^9}},ExpressionUUID->"05b37fca-39f1-4731-afa0-\
f36eba5768d6"],

Cell["\<\
At the end I made a couple of functions that could generate expressions for \
awhile and then put it in a form that\[CloseCurlyQuote]s easy to analyze. \
There are two equivalents of the functions depending on if you want to input \
the iterations or the duration that it should run for. It also has the option \
to input what percentage of those expressions should use NOR gates if any \
variation is needed.\
\>", "Text",
 CellChangeTimes->{
  3.7405005518436775`*^9},ExpressionUUID->"574c9754-f156-421f-8304-\
7aac91bb5f05"],

Cell[BoxData[
 RowBox[{"Clear", "@", "varlist"}]], "Input",
 CellChangeTimes->{{3.7405006523290915`*^9, 
  3.740500655780898*^9}},ExpressionUUID->"0b6e112b-adbd-4eaa-b8b4-\
51afa8971629"],

Cell[BoxData[
 RowBox[{
  RowBox[{"varlist", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7402447156574907`*^9, 3.7402447213718*^9}, 
   3.740244830291555*^9, 3.7402653139967427`*^9, {3.740342984693112*^9, 
   3.7403430041620226`*^9}, {3.7403977457255397`*^9, 3.740397745917985*^9}, {
   3.7404079788567605`*^9, 3.740407981344104*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"526fb5cc-4f5e-411a-8967-e817c23cde22"],

Cell[BoxData[
 RowBox[{"Clear", "@", "addSomething"}]], "Input",
 CellChangeTimes->{{3.7405006585743957`*^9, 
  3.7405006610058956`*^9}},ExpressionUUID->"3bad1772-8e5d-4d28-b7c4-\
42f385cd5e34"],

Cell[BoxData[
 RowBox[{
  RowBox[{"addSomething", "[", 
   RowBox[{"ex_", ",", 
    RowBox[{"nand_:", "1"}], ",", 
    RowBox[{"var_:", "1"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "positions", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"positions", " ", "=", " ", 
      RowBox[{"Position", "[", 
       RowBox[{"ex", ",", " ", "_myNand", ",", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "Infinity"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Insert", "[", 
      RowBox[{"ex", ",", 
       RowBox[{"RandomChoice", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"nand", ",", 
           RowBox[{"var", "/", "3"}], ",", 
           RowBox[{"var", "/", "3"}], ",", 
           RowBox[{"var", "/", "3"}]}], "}"}], "\[Rule]", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"myNand", "[", "]"}], "}"}], ",", "varlist"}], "]"}]}], 
        "]"}], ",", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"RandomChoice", "[", "positions", "]"}], ",", "1"}], "]"}]}],
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.740244016868515*^9, 3.740244126314994*^9}, {
   3.740244187585926*^9, 3.740244199638564*^9}, {3.740244240209186*^9, 
   3.7402442450146503`*^9}, 3.740244329435688*^9, {3.740244411861706*^9, 
   3.740244457086198*^9}, {3.740244522142294*^9, 3.7402445250253677`*^9}, {
   3.7402447253342323`*^9, 3.740244763747141*^9}, 3.740244812722323*^9, {
   3.7402448586022787`*^9, 3.740244875389709*^9}, {3.740322091293233*^9, 
   3.7403221155772133`*^9}, {3.7403221551184626`*^9, 
   3.7403222270153327`*^9}, {3.740397814184251*^9, 3.7403978145323167`*^9}, {
   3.74039785751628*^9, 3.740397859481064*^9}, {3.740398924432034*^9, 
   3.7403989253645372`*^9}, {3.7403992839931917`*^9, 3.74039928485393*^9}, {
   3.7403993983742046`*^9, 3.7403994108936605`*^9}, {3.7404009516180754`*^9, 
   3.7404009524418726`*^9}, 3.7404080035008354`*^9, {3.7404080401108723`*^9, 
   3.7404080626395817`*^9}, {3.7404082583858757`*^9, 3.7404082841250234`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"2660ef0c-9e99-446a-998d-0854edffe82d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"makeTreeNand", "[", "nLeaves_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Last", "@", 
       RowBox[{"NestList", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"addSomething", "[", 
           RowBox[{"#", ",", 
            RowBox[{"RandomInteger", "[", 
             RowBox[{"{", 
              RowBox[{"1", ",", "20"}], "}"}], "]"}], ",", 
            RowBox[{"RandomInteger", "[", 
             RowBox[{"{", 
              RowBox[{"1", ",", "20"}], "}"}], "]"}]}], "]"}], "&"}], ",", 
         RowBox[{"myNand", "[", "]"}], ",", 
         RowBox[{"nLeaves", "-", "1"}]}], "]"}]}], ")"}], "/.", 
     RowBox[{
      RowBox[{"myNand", "[", "]"}], "\[RuleDelayed]", 
      RowBox[{"RandomChoice", "[", "varlist", "]"}]}]}], ")"}], " ", "/.", 
   " ", 
   RowBox[{"myNand", "\[Rule]", "Nand"}]}]}]], "Input",
 CellChangeTimes->{{3.740244116616603*^9, 3.740244173114025*^9}, {
  3.7402442551209793`*^9, 3.740244319262849*^9}, {3.740244472609384*^9, 
  3.740244490165711*^9}, {3.740244613543975*^9, 3.740244615843395*^9}, {
  3.740244670080104*^9, 3.7402446888847322`*^9}, {3.740244736663514*^9, 
  3.740244737928927*^9}, {3.7402658167429295`*^9, 3.740265830343538*^9}, {
  3.7403422318603077`*^9, 3.7403422324277563`*^9}, {3.740398021948348*^9, 
  3.740398023297777*^9}, {3.7403984148072844`*^9, 3.7403984166254253`*^9}, {
  3.740399152391342*^9, 3.7403991528770165`*^9}, {3.7403995113808546`*^9, 
  3.740399512009136*^9}, {3.740400877899907*^9, 3.7404008902129936`*^9}, {
  3.7404080952223816`*^9, 3.740408117070923*^9}, {3.7404081490184493`*^9, 
  3.740408237497753*^9}, {3.7404083227955074`*^9, 3.74040834830027*^9}, {
  3.740409836094274*^9, 3.740409848634243*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"abbce8c3-6d7f-4813-9b16-b426d55d1f3d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"makeTreeNor", "[", "nLeaves_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Last", "@", 
       RowBox[{"NestList", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"addSomething", "[", 
           RowBox[{"#", ",", 
            RowBox[{"RandomInteger", "[", 
             RowBox[{"{", 
              RowBox[{"1", ",", "20"}], "}"}], "]"}], ",", 
            RowBox[{"RandomInteger", "[", 
             RowBox[{"{", 
              RowBox[{"1", ",", "20"}], "}"}], "]"}]}], "]"}], "&"}], ",", 
         RowBox[{"myNand", "[", "]"}], ",", 
         RowBox[{"nLeaves", "-", "1"}]}], "]"}]}], ")"}], "/.", 
     RowBox[{
      RowBox[{"myNand", "[", "]"}], "\[RuleDelayed]", 
      RowBox[{"RandomChoice", "[", "varlist", "]"}]}]}], ")"}], " ", "/.", 
   " ", 
   RowBox[{"myNand", "\[Rule]", "Nor"}]}]}]], "Input",
 CellChangeTimes->{{3.740400892949642*^9, 3.7404009126459427`*^9}, {
  3.740401060449435*^9, 3.7404010635132847`*^9}, {3.7404083836766253`*^9, 
  3.7404084032462606`*^9}, {3.7404098419427075`*^9, 3.7404098457683415`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"e9b32402-4839-499d-9f66-7584c48281a4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"counts", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "255"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.7404126456053767`*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"9a527d01-3443-4eac-bc6a-3a6f372d9548"],

Cell[BoxData[
 RowBox[{
  RowBox[{"visualizeCount", "[", 
   RowBox[{"leaves_", ",", " ", "iterations_", ",", "Nand_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tree", ",", " ", 
      RowBox[{"counts", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "255"}], "}"}]}], "]"}]}], ",", " ", 
      "c"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Monitor", "[", 
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"c", " ", "=", " ", 
           RowBox[{"100", "*", 
            RowBox[{
             RowBox[{"N", "@", "i"}], "/", "iterations"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"tree", " ", "=", " ", 
           RowBox[{"makeTreeNand", "[", 
            RowBox[{"RandomInteger", "[", 
             RowBox[{"{", 
              RowBox[{"1", ",", "leaves"}], "}"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"counts", "[", 
            RowBox[{"[", 
             RowBox[{"FromDigits", "[", 
              RowBox[{
               RowBox[{"Boole", "[", 
                RowBox[{"BooleanTable", "[", "tree", "]"}], "]"}], ",", "2"}],
               "]"}], "]"}], "]"}], "++"}], ";"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"iterations", " ", "*", " ", 
            RowBox[{"(", 
             RowBox[{"Nand", "/", "100"}], ")"}]}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}], ",", " ", "c"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Monitor", "[", 
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"c", " ", "=", " ", 
           RowBox[{"100", "*", 
            RowBox[{
             RowBox[{"N", "@", "i"}], "/", "iterations"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"tree", " ", "=", " ", 
           RowBox[{"makeTreeNor", "[", 
            RowBox[{"RandomInteger", "[", 
             RowBox[{"{", 
              RowBox[{"1", ",", "leaves"}], "}"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"counts", "[", 
            RowBox[{"[", 
             RowBox[{"FromDigits", "[", 
              RowBox[{
               RowBox[{"Boole", "[", 
                RowBox[{"BooleanTable", "[", "tree", "]"}], "]"}], ",", "2"}],
               "]"}], "]"}], "]"}], "++"}], ";"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"iterations", " ", "*", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"(", 
               RowBox[{"Nand", "/", "100"}], ")"}]}], ")"}]}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}], ",", " ", "c"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"ListLogPlot", "[", 
       RowBox[{
        RowBox[{"Sort", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"counts", "[", 
            RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "254"}], "]"}]}], "]"}], "+", "1"}], "]"}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"ArrayPlot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"IntegerDigits", "[", 
           RowBox[{"#", ",", "2", ",", "8"}], "]"}], "&"}], "/@", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"counts", "[", 
                RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", 
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", "254"}], "]"}]}], ",", "0"}], "]"}], "-", 
           "1"}], "]"}]}], ",", 
        RowBox[{"Mesh", "\[Rule]", "True"}], ",", 
        RowBox[{"ColorRules", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0", "\[Rule]", "Red"}], ",", 
           RowBox[{"1", "\[Rule]", 
            RowBox[{"Darker", "@", "Green"}]}]}], "}"}]}]}], "]"}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"Column", "[", 
       RowBox[{"FullForm", "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"FullSimplify", "[", 
            RowBox[{"BooleanFunction", "[", 
             RowBox[{"#", ",", "varlist"}], "]"}], "]"}], "&"}], "/@", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"counts", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", 
               RowBox[{"Range", "[", 
                RowBox[{"0", ",", "254"}], "]"}]}], ",", "0"}], "]"}], "-", 
            "1"}], "]"}]}], ")"}]}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"BarChart", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"counts", "[", 
          RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "254"}], "]"}]}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.740401015531084*^9, 3.74040101591707*^9}, {
  3.740401137891239*^9, 3.740401138574455*^9}, {3.740401581572173*^9, 
  3.740401621977064*^9}, {3.740401672458048*^9, 3.740401685792362*^9}, {
  3.7404017488496695`*^9, 3.7404018313438997`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"aa3482de-befc-4693-8f6f-adf8061326e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"visualizeWhile", "[", 
   RowBox[{"leaves_", ",", " ", "time_", ",", 
    RowBox[{"Nand_:", "100"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tree", ",", " ", "c", ",", 
      RowBox[{"start", " ", "=", " ", 
       RowBox[{"UnixTime", "[", "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"UnixTime", "[", "]"}], "<", 
          RowBox[{"(", 
           RowBox[{"start", "+", 
            RowBox[{"(", 
             RowBox[{"time", "*", 
              RowBox[{"(", 
               RowBox[{"Nand", "/", "100"}], ")"}]}], ")"}]}], ")"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"c", " ", "=", " ", 
           RowBox[{
            RowBox[{"UnixTime", "[", "]"}], "-", "start"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tree", " ", "=", " ", 
              RowBox[{"makeTreeNand", "[", 
               RowBox[{"RandomInteger", "[", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "leaves"}], "}"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"len", "+=", "1"}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"counts", "[", 
               RowBox[{"[", 
                RowBox[{"FromDigits", "[", 
                 RowBox[{
                  RowBox[{"Boole", "[", 
                   RowBox[{"BooleanTable", "[", "tree", "]"}], "]"}], ",", 
                  "2"}], "]"}], "]"}], "]"}], "++"}], ";"}], ",", 
            RowBox[{"{", "100", "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
        "]"}], ",", " ", "c"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"start", " ", "=", " ", 
      RowBox[{"UnixTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"UnixTime", "[", "]"}], "<", 
          RowBox[{"(", 
           RowBox[{"start", "+", 
            RowBox[{"(", 
             RowBox[{"time", "*", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"(", 
                 RowBox[{"Nand", "/", "100"}], ")"}]}], ")"}]}], ")"}]}], 
           ")"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"c", " ", "=", " ", 
           RowBox[{
            RowBox[{"UnixTime", "[", "]"}], "-", "start"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tree", " ", "=", " ", 
              RowBox[{"makeTreeNand", "[", 
               RowBox[{"RandomInteger", "[", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "leaves"}], "}"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"counts", "[", 
               RowBox[{"[", 
                RowBox[{"FromDigits", "[", 
                 RowBox[{
                  RowBox[{"Boole", "[", 
                   RowBox[{"BooleanTable", "[", "tree", "]"}], "]"}], ",", 
                  "2"}], "]"}], "]"}], "]"}], "++"}], ";"}], ",", 
            RowBox[{"{", "100", "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
        "]"}], ",", " ", "c"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"ListLogPlot", "[", 
       RowBox[{
        RowBox[{"Sort", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"counts", "[", 
            RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "254"}], "]"}]}], "]"}], "+", "1"}], "]"}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"ArrayPlot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"IntegerDigits", "[", 
           RowBox[{"#", ",", "2", ",", "8"}], "]"}], "&"}], "/@", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"counts", "[", 
                RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", 
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", "254"}], "]"}]}], ",", "0"}], "]"}], "-", 
           "1"}], "]"}]}], ",", 
        RowBox[{"Mesh", "\[Rule]", "True"}], ",", 
        RowBox[{"MeshStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Thick"}], "}"}]}], ",", " ", 
        RowBox[{"Background", "\[Rule]", "Black"}], ",", 
        RowBox[{"ColorRules", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0", "\[Rule]", "Red"}], ",", 
           RowBox[{"1", "\[Rule]", 
            RowBox[{"Darker", "@", "Green"}]}]}], "}"}]}]}], "]"}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"Column", "[", 
       RowBox[{"FullForm", "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"FullSimplify", "[", 
            RowBox[{"BooleanFunction", "[", 
             RowBox[{"#", ",", "varlist"}], "]"}], "]"}], "&"}], "/@", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"counts", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", 
               RowBox[{"Range", "[", 
                RowBox[{"0", ",", "254"}], "]"}]}], ",", "0"}], "]"}], "-", 
            "1"}], "]"}]}], ")"}]}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"BarChart", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"counts", "[", 
          RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "254"}], "]"}]}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7404011263112736`*^9, 3.7404013318214025`*^9}, {
  3.740401387934289*^9, 3.740401397992365*^9}, {3.7404014578741226`*^9, 
  3.740401514853713*^9}, {3.740401859107624*^9, 3.7404018741035376`*^9}, {
  3.7404019710271764`*^9, 3.7404020083922143`*^9}, {3.7404021069206343`*^9, 
  3.740402107764369*^9}, {3.7404086366487885`*^9, 3.740408664390565*^9}, {
  3.7404108074904165`*^9, 3.740410829109747*^9}, {3.740411311812476*^9, 
  3.7404113297613907`*^9}, {3.740411505768667*^9, 3.7404115737473593`*^9}, {
  3.7404116404876423`*^9, 3.74041168208834*^9}, {3.740412120614373*^9, 
  3.7404121290880795`*^9}, {3.7404126300590887`*^9, 3.7404126305742598`*^9}, {
  3.7404178606054306`*^9, 3.7404178659601054`*^9}, {3.74041793366496*^9, 
  3.740417936017666*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"d58f1865-c395-4de1-b1bf-398312ff2f76"],

Cell["\<\
Because there are only three variables being used, the amount of possible \
truth tables is 256. The function uses a list to keep track of the amount of \
times each of those truth tables occurred and at the end it creates a \
logarithmic line plot and a histogram. This particular test ran for 12 hours \
or so. The logarithmic plot is shifted up one to make it easier to analyze \
the data.\
\>", "Text",
 CellChangeTimes->{
  3.740500763876296*^9},ExpressionUUID->"1aaf348e-c6da-49c8-acb5-\
20df316734a2"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
h+4TxESkL1g//NzXZEMidHvl8oe+7D5Cg0+tbA/vBFmiwUJdds4pZmig2BMX
oPQn8xqUbPA6ecfHmfY1uH/Q3+poOVmvwcdPfVIijpNFDRqS/JoamQ0frv+4
9nZOBZnToqH2/L38SrJEi4CjyKxlhhZ51gfvrb9B5rVILdxg513L9rU4OfHE
tsY6tq+Fp+fvK51us30tuszd3ZPN6D7JoEWR6lWvLnN236RDoGtRqed2skSH
hNrvxm/bMYL2dVgZ0+h8gZnXof5IZEDQTrKgQ9k9j8PXD5L1Ooyz3uo27ylZ
1CHPofy+8hnZoIPi/aPBE5+TuSSYHVLnL2WWJEHTWXtnNzOSYO+xuW8NM5+E
rQWSpKWfudB+EtK6xrR81I+sT0L148zVo5nFJNwMbnUf5UE2fMj31yY7jyNz
yfj19JCzJcySZPxg+iR6o6kr7SfjfGCTaddAMp+MhdopXfaDyEIysnxDbpxj
1icjR3Pph58VZDEZUt24Nk8l2ZCMt3zhV8Lno2g/BUt67x9RxCxJwRquYNlT
ZqRgVOxql84dbrSfgonqO3u6KsjCB/uaNK2qIetTsLHS07DzIVlMQf72ZRne
yi/xf62IPD0=
      "]]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., -1.1394923808463466`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 254}, {-0.8722040445984379, 15.69967280277188}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, 
     Charting`ScaledTicks[{Log, Exp}]}, {Automatic, {{0., 
       FormBox["1", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {9.210340371976184, 
       FormBox[
        TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {13.815510557964274`, 
       FormBox[
        TemplateBox[{"10", "6"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.907755278982137, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.512925464970229`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {16.11809565095832, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {18.420680743952367`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {18.51599092375669, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {18.60300230074632, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Input",ExpressionUUID->"0ce00bb2-a3d3-\
4147-b052-b6a28f198811"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{{-4.6000000000000005`, 0.}, {255.5, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], {}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{1.5, 0.}, {2.5, 4.691649*^6},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{2.5, 0.}, {3.5, 4.459265*^6},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{3.5, 0.}, {4.5, 1.213334*^6},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{4.5, 0.}, {5.5, 111390.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{5.5, 0.}, {6.5, 375332.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{6.5, 0.}, {7.5, 1747.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{7.5, 0.}, {8.5, 5.109091*^6},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{8.5, 0.}, {9.5, 488919.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{9.5, 0.}, {10.5, 1219.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{10.5, 0.}, {11.5, 166282.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{11.5, 0.}, {12.5, 1.466939*^6},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{12.5, 0.}, {13.5, 165133.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{13.5, 0.}, {14.5, 1.468309*^6},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{14.5, 0.}, {15.5, 220816.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{15.5, 0.}, {16.5, 4.807866*^6},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{16.5, 0.}, {17.5, 9908.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{17.5, 0.}, {18.5, 2412.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{18.5, 0.}, {19.5, 18.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{19.5, 0.}, {20.5, 2383.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{20.5, 0.}, {21.5, 30.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{21.5, 0.}, {22.5, 2400.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{22.5, 0.}, {23.5, 0.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{23.5, 0.}, {24.5, 91.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{24.5, 0.}, {25.5, 140.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{25.5, 0.}, {26.5, 125.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{26.5, 0.}, {27.5, 149.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{27.5, 0.}, {28.5, 365.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{28.5, 0.}, {29.5, 146.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{29.5, 0.}, {30.5, 336.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{30.5, 0.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{31.5, 0.}, {32.5, 29002.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{32.5, 0.}, {33.5, 47596.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{33.5, 0.}, {34.5, 22.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{34.5, 0.}, {35.5, 14493.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{35.5, 0.}, {36.5, 760.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{36.5, 0.}, {37.5, 117.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{37.5, 0.}, {38.5, 128.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{38.5, 0.}, {39.5, 162.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{39.5, 0.}, {40.5, 358.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{40.5, 0.}, {41.5, 893.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{41.5, 0.}, {42.5, 0.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{42.5, 0.}, {43.5, 19817.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{43.5, 0.}, {44.5, 102.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{44.5, 0.}, {45.5, 839.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{45.5, 0.}, {46.5, 9.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{46.5, 0.}, {47.5, 1275.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{47.5, 0.}, {48.5, 141043.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{48.5, 0.}, {49.5, 14517.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{49.5, 0.}, {50.5, 771.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{50.5, 0.}, {51.5, 1160.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{51.5, 0.}, {52.5, 492732.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{52.5, 0.}, {53.5, 164.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{53.5, 0.}, {54.5, 348.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{54.5, 0.}, {55.5, 2.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{55.5, 0.}, {56.5, 28554.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{56.5, 0.}, {57.5, 882.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{57.5, 0.}, {58.5, 7.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{58.5, 0.}, {59.5, 1244.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{59.5, 0.}, {60.5, 141220.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{60.5, 0.}, {61.5, 274.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{61.5, 0.}, {62.5, 40.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{62.5, 0.}, {63.5, 36.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{63.5, 0.}, {64.5, 1.272111*^6},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{64.5, 0.}, {65.5, 47825.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{65.5, 0.}, {66.5, 23.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{66.5, 0.}, {67.5, 115.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{67.5, 0.}, {68.5, 125.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{68.5, 0.}, {69.5, 14683.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{69.5, 0.}, {70.5, 715.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{70.5, 0.}, {71.5, 131.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{71.5, 0.}, {72.5, 353.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{72.5, 0.}, {73.5, 947.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{73.5, 0.}, {74.5, 0.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{74.5, 0.}, {75.5, 798.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{75.5, 0.}, {76.5, 11.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{76.5, 0.}, {77.5, 19798.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{77.5, 0.}, {78.5, 87.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{78.5, 0.}, {79.5, 1289.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{79.5, 0.}, {80.5, 141557.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{80.5, 0.}, {81.5, 14645.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{81.5, 0.}, {82.5, 724.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{82.5, 0.}, {83.5, 165.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{83.5, 0.}, {84.5, 382.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{84.5, 0.}, {85.5, 1212.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{85.5, 0.}, {86.5, 493241.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{86.5, 0.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{87.5, 0.}, {88.5, 28498.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{88.5, 0.}, {89.5, 822.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{89.5, 0.}, {90.5, 8.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{90.5, 0.}, {91.5, 300.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{91.5, 0.}, {92.5, 40.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{92.5, 0.}, {93.5, 1245.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{93.5, 0.}, {94.5, 141850.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{94.5, 0.}, {95.5, 35.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{95.5, 0.}, {96.5, 1.270154*^6},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{96.5, 0.}, {97.5, 862.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{97.5, 0.}, {98.5, 0.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{98.5, 0.}, {99.5, 886.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{99.5, 0.}, {100.5, 9.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{100.5, 0.}, {101.5, 847.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{101.5, 0.}, {102.5, 11.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{102.5, 0.}, {103.5, 297.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{103.5, 0.}, {104.5, 46.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{104.5, 0.}, {105.5, 3.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{105.5, 0.}, {106.5, 0.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{106.5, 0.}, {107.5, 287.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{107.5, 0.}, {108.5, 0.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{108.5, 0.}, {109.5, 337.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{109.5, 0.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{110.5, 0.}, {111.5, 798.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{111.5, 0.}, {112.5, 6365.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{112.5, 0.}, {113.5, 20236.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{113.5, 0.}, {114.5, 95.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{114.5, 0.}, {115.5, 1272.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{115.5, 0.}, {116.5, 141907.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{116.5, 0.}, {117.5, 1232.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{117.5, 0.}, {118.5, 141366.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{118.5, 0.}, {119.5, 33.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{119.5, 0.}, {120.5, 1.270425*^6},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{120.5, 0.}, {121.5, 313.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{121.5, 0.}, {122.5, 0.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{122.5, 0.}, {123.5, 850.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{123.5, 0.}, {124.5, 6223.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{124.5, 0.}, {125.5, 785.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{125.5, 0.}, {126.5, 6252.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{126.5, 0.}, {127.5, 68.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{127.5, 0.}, {128.5, 6.580838*^6},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{128.5, 0.}, {129.5, 150273.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{129.5, 0.}, {130.5, 45.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{130.5, 0.}, {131.5, 661.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{131.5, 0.}, {132.5, 473.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{132.5, 0.}, {133.5, 581.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{133.5, 0.}, {134.5, 469.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{134.5, 0.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{135.5, 0.}, {136.5, 149.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{136.5, 0.}, {137.5, 67944.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{137.5, 0.}, {138.5, 76.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{138.5, 0.}, {139.5, 12951.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{139.5, 0.}, {140.5, 763.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{140.5, 0.}, {141.5, 12784.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{141.5, 0.}, {142.5, 736.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{142.5, 0.}, {143.5, 330.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{143.5, 0.}, {144.5, 463172.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{144.5, 0.}, {145.5, 608.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{145.5, 0.}, {146.5, 430.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{146.5, 0.}, {147.5, 0.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{147.5, 0.}, {148.5, 117.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{148.5, 0.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{149.5, 0.}, {150.5, 147.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{150.5, 0.}, {151.5, 0.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{151.5, 0.}, {152.5, 4.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{152.5, 0.}, {153.5, 825.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{153.5, 0.}, {154.5, 217.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{154.5, 0.}, {155.5, 35.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{155.5, 0.}, {156.5, 262.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{156.5, 0.}, {157.5, 23.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{157.5, 0.}, {158.5, 286.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{158.5, 0.}, {159.5, 0.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{159.5, 0.}, {160.5, 4273.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{160.5, 0.}, {161.5, 67831.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{161.5, 0.}, {162.5, 74.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{162.5, 0.}, {163.5, 12779.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{163.5, 0.}, {164.5, 724.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{164.5, 0.}, {165.5, 716.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{165.5, 0.}, {166.5, 233.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{166.5, 0.}, {167.5, 32.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{167.5, 0.}, {168.5, 300.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{168.5, 0.}, {169.5, 28134.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{169.5, 0.}, {170.5, 11.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{170.5, 0.}, {171.5, 148346.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{171.5, 0.}, {172.5, 2138.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{172.5, 0.}, {173.5, 5051.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{173.5, 0.}, {174.5, 112.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{174.5, 0.}, {175.5, 13325.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{175.5, 0.}, {176.5, 426104.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{176.5, 0.}, {177.5, 12578.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{177.5, 0.}, {178.5, 778.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{178.5, 0.}, {179.5, 321.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{179.5, 0.}, {180.5, 463823.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{180.5, 0.}, {181.5, 26.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{181.5, 0.}, {182.5, 252.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{182.5, 0.}, {183.5, 0.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{183.5, 0.}, {184.5, 4346.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{184.5, 0.}, {185.5, 5148.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{185.5, 0.}, {186.5, 118.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{186.5, 0.}, {187.5, 13320.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{187.5, 0.}, {188.5, 425862.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{188.5, 0.}, {189.5, 361.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{189.5, 0.}, {190.5, 75.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{190.5, 0.}, {191.5, 216.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{191.5, 0.}, {192.5, 2.125116*^6},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{192.5, 0.}, {193.5, 67682.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{193.5, 0.}, {194.5, 93.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{194.5, 0.}, {195.5, 755.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{195.5, 0.}, {196.5, 209.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{196.5, 0.}, {197.5, 12745.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{197.5, 0.}, {198.5, 690.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{198.5, 0.}, {199.5, 28.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{199.5, 0.}, {200.5, 273.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{200.5, 0.}, {201.5, 27766.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{201.5, 0.}, {202.5, 15.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{202.5, 0.}, {203.5, 5094.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{203.5, 0.}, {204.5, 98.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{204.5, 0.}, {205.5, 148836.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{205.5, 0.}, {206.5, 2130.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{206.5, 0.}, {207.5, 13557.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{207.5, 0.}, {208.5, 425996.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{208.5, 0.}, {209.5, 12877.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{209.5, 0.}, {210.5, 720.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{210.5, 0.}, {211.5, 32.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{211.5, 0.}, {212.5, 291.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{212.5, 0.}, {213.5, 302.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{213.5, 0.}, {214.5, 463651.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{214.5, 0.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{215.5, 0.}, {216.5, 4511.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{216.5, 0.}, {217.5, 5097.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{217.5, 0.}, {218.5, 130.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{218.5, 0.}, {219.5, 393.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{219.5, 0.}, {220.5, 99.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{220.5, 0.}, {221.5, 13521.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{221.5, 0.}, {222.5, 424967.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{222.5, 0.}, {223.5, 229.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{223.5, 0.}, {224.5, 2.125829*^6},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{224.5, 0.}, {225.5, 27989.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{225.5, 0.}, {226.5, 8.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{226.5, 0.}, {227.5, 5092.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{227.5, 0.}, {228.5, 140.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{228.5, 0.}, {229.5, 5158.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{229.5, 0.}, {230.5, 111.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{230.5, 0.}, {231.5, 354.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{231.5, 0.}, {232.5, 84.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{232.5, 0.}, {233.5, 2820.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{233.5, 0.}, {234.5, 0.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{234.5, 0.}, {235.5, 59099.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{235.5, 0.}, {236.5, 167.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{236.5, 0.}, {237.5, 58750.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{237.5, 0.}, {238.5, 207.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{238.5, 0.}, {239.5, 67576.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{239.5, 0.}, {240.5, 365901.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{240.5, 0.}, {241.5, 149312.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{241.5, 0.}, {242.5, 2122.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{242.5, 0.}, {243.5, 13502.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{243.5, 0.}, {244.5, 425659.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{244.5, 0.}, {245.5, 13452.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{245.5, 0.}, {246.5, 424100.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{246.5, 0.}, {247.5, 270.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{247.5, 0.}, {248.5, 2.12684*^6},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{248.5, 0.}, {249.5, 59098.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{249.5, 0.}, {250.5, 185.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{250.5, 0.}, {251.5, 67928.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{251.5, 0.}, {252.5, 365770.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{252.5, 0.}, {253.5, 68164.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{253.5, 0.}, {254.5, 366270.},
       RoundingRadius->0]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      RectangleBox[{254.5, 0.}, {255.5, 34555.},
       RoundingRadius->0]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[{
     {Thickness[Tiny], LineBox[{{-4.6000000000000005`, 0.}, {260.702, 0.}}], 
      StyleBox[{}, "GraphicsLabel",
       StripOnInput->False]}, 
     StyleBox[{
       {Thickness[Tiny], 
        LineBox[{{0.5, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {0.5, 0.}]}], 
        LineBox[{{255.5, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {255.5, 
           0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, "GraphicsTicks",
      StripOnInput->False]}, "GraphicsAxes",
    StripOnInput->False,
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{-4.6000000000000005`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Input",
 CellChangeTimes->{{3.7405008100408716`*^9, 
  3.74050081945271*^9}},ExpressionUUID->"d0656fe1-1c9f-4573-b009-\
6316040e4f3f"],

Cell["\<\
It also formats the truth tables that weren\[CloseCurlyQuote]t generated into \
an array plot and lists the equivalent expressions for each of those truth \
tables.\
\>", "Text",
 CellChangeTimes->{
  3.740500775250877*^9},ExpressionUUID->"8dc9a7f2-32e9-400b-9054-\
382141d4665d"],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWIOIAaxYSAUDJ7aM6AB0sQ/YKgjTz2p5lDLPYPNHFqH
z1Bx/1AP/8FmDq3Tw1CP35FWPtDa/dQSHyrhNtjMGWzuHzzpEwBYDtD0
    "], {{0, 0}, {8, 12}}, {0, 1}], {
    {GrayLevel[0], 
     StyleBox[
      LineBox[{{{0, 12}, {8, 12}}, {{0, 11}, {8, 11}}, {{0, 10}, {8, 10}}, {{
       0, 9}, {8, 9}}, {{0, 8}, {8, 8}}, {{0, 7}, {8, 7}}, {{0, 6}, {8, 
       6}}, {{0, 5}, {8, 5}}, {{0, 4}, {8, 4}}, {{0, 3}, {8, 3}}, {{0, 2}, {8,
        2}}, {{0, 1}, {8, 1}}, {{0, 0}, {8, 0}}}],
      Antialiasing->False]}, 
    {Thickness[Large], 
     StyleBox[
      LineBox[{{{0, 0}, {0, 12}}, {{1, 0}, {1, 12}}, {{2, 0}, {2, 12}}, {{3, 
       0}, {3, 12}}, {{4, 0}, {4, 12}}, {{5, 0}, {5, 12}}, {{6, 0}, {6, 
       12}}, {{7, 0}, {7, 12}}, {{8, 0}, {8, 12}}}],
      Antialiasing->False]}}},
  Background->GrayLevel[0],
  Frame->False,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
    Automatic}]], "Input",ExpressionUUID->"d75afd2b-4a91-4f1f-8d59-\
f8fe2d6cd6ac"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      StyleBox[
       RowBox[{"Xor", "[", 
        RowBox[{"a", ",", "b", ",", "c", ",", 
         RowBox[{"And", "[", 
          RowBox[{"a", ",", "b", ",", "c"}], "]"}]}], "]"}],
       ShowSpecialCharacters->False,
       ShowStringCharacters->True,
       NumberMarks->True],
      FullForm]},
    {
     TagBox[
      StyleBox[
       RowBox[{"Not", "[", 
        RowBox[{"Xor", "[", 
         RowBox[{"a", ",", "b", ",", "c", ",", 
          RowBox[{"And", "[", 
           RowBox[{"a", ",", "b"}], "]"}], ",", 
          RowBox[{"And", "[", 
           RowBox[{"a", ",", "b", ",", "c"}], "]"}]}], "]"}], "]"}],
       ShowSpecialCharacters->False,
       ShowStringCharacters->True,
       NumberMarks->True],
      FullForm]},
    {
     TagBox[
      StyleBox[
       RowBox[{"Not", "[", 
        RowBox[{"Xor", "[", 
         RowBox[{"a", ",", "b", ",", "c", ",", 
          RowBox[{"And", "[", 
           RowBox[{"a", ",", "c"}], "]"}], ",", 
          RowBox[{"And", "[", 
           RowBox[{"a", ",", "b", ",", "c"}], "]"}]}], "]"}], "]"}],
       ShowSpecialCharacters->False,
       ShowStringCharacters->True,
       NumberMarks->True],
      FullForm]},
    {
     TagBox[
      StyleBox[
       RowBox[{"Not", "[", 
        RowBox[{"Xor", "[", 
         RowBox[{"a", ",", "b", ",", "c", ",", 
          RowBox[{"And", "[", 
           RowBox[{"b", ",", "c"}], "]"}], ",", 
          RowBox[{"And", "[", 
           RowBox[{"a", ",", "b", ",", "c"}], "]"}]}], "]"}], "]"}],
       ShowSpecialCharacters->False,
       ShowStringCharacters->True,
       NumberMarks->True],
      FullForm]},
    {
     TagBox[
      StyleBox[
       RowBox[{"Not", "[", 
        RowBox[{"Xor", "[", 
         RowBox[{"a", ",", "b", ",", "c"}], "]"}], "]"}],
       ShowSpecialCharacters->False,
       ShowStringCharacters->True,
       NumberMarks->True],
      FullForm]},
    {
     TagBox[
      StyleBox[
       RowBox[{"Not", "[", 
        RowBox[{"Xor", "[", 
         RowBox[{"a", ",", "b", ",", 
          RowBox[{"And", "[", 
           RowBox[{"a", ",", "c"}], "]"}], ",", 
          RowBox[{"And", "[", 
           RowBox[{"b", ",", "c"}], "]"}], ",", 
          RowBox[{"And", "[", 
           RowBox[{"a", ",", "b", ",", "c"}], "]"}]}], "]"}], "]"}],
       ShowSpecialCharacters->False,
       ShowStringCharacters->True,
       NumberMarks->True],
      FullForm]},
    {
     TagBox[
      StyleBox[
       RowBox[{"Not", "[", 
        RowBox[{"Xor", "[", 
         RowBox[{"b", ",", "c", ",", 
          RowBox[{"And", "[", 
           RowBox[{"a", ",", "b"}], "]"}], ",", 
          RowBox[{"And", "[", 
           RowBox[{"a", ",", "c"}], "]"}], ",", 
          RowBox[{"And", "[", 
           RowBox[{"a", ",", "b", ",", "c"}], "]"}]}], "]"}], "]"}],
       ShowSpecialCharacters->False,
       ShowStringCharacters->True,
       NumberMarks->True],
      FullForm]},
    {
     TagBox[
      StyleBox[
       RowBox[{"Xor", "[", 
        RowBox[{"a", ",", "c", ",", 
         RowBox[{"And", "[", 
          RowBox[{"a", ",", "b"}], "]"}], ",", 
         RowBox[{"And", "[", 
          RowBox[{"b", ",", "c"}], "]"}], ",", 
         RowBox[{"And", "[", 
          RowBox[{"a", ",", "b", ",", "c"}], "]"}]}], "]"}],
       ShowSpecialCharacters->False,
       ShowStringCharacters->True,
       NumberMarks->True],
      FullForm]},
    {
     TagBox[
      StyleBox[
       RowBox[{"Xor", "[", 
        RowBox[{"a", ",", "b", ",", "c"}], "]"}],
       ShowSpecialCharacters->False,
       ShowStringCharacters->True,
       NumberMarks->True],
      FullForm]},
    {
     TagBox[
      StyleBox[
       RowBox[{"Xor", "[", 
        RowBox[{"a", ",", "b", ",", "c", ",", 
         RowBox[{"And", "[", 
          RowBox[{"b", ",", "c"}], "]"}], ",", 
         RowBox[{"And", "[", 
          RowBox[{"a", ",", "b", ",", "c"}], "]"}]}], "]"}],
       ShowSpecialCharacters->False,
       ShowStringCharacters->True,
       NumberMarks->True],
      FullForm]},
    {
     TagBox[
      StyleBox[
       RowBox[{"Xor", "[", 
        RowBox[{"a", ",", "b", ",", "c", ",", 
         RowBox[{"And", "[", 
          RowBox[{"a", ",", "c"}], "]"}], ",", 
         RowBox[{"And", "[", 
          RowBox[{"a", ",", "b", ",", "c"}], "]"}]}], "]"}],
       ShowSpecialCharacters->False,
       ShowStringCharacters->True,
       NumberMarks->True],
      FullForm]},
    {
     TagBox[
      StyleBox[
       RowBox[{"Not", "[", 
        RowBox[{"Xor", "[", 
         RowBox[{"a", ",", "b", ",", "c", ",", 
          RowBox[{"And", "[", 
           RowBox[{"a", ",", "b", ",", "c"}], "]"}]}], "]"}], "]"}],
       ShowSpecialCharacters->False,
       ShowStringCharacters->True,
       NumberMarks->True],
      FullForm]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{3.74047384304208*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"735630f8-f0c5-4538-a467-6d4d7ce99263"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conclusion", "Subsection",
 CellChangeTimes->{{3.7405008847192407`*^9, 
  3.7405008858930893`*^9}},ExpressionUUID->"93e7cad3-c85b-4b6f-abc7-\
00019d9ac3dd"],

Cell["\<\
From random generation I was able to deduce to a reasonable degree of \
certainty that it is impossible to generate an equivalent NAND expression \
that\[CloseCurlyQuote]s simpler than the one the Wolfram Language generates \
for three input XOR gates. There are most likely equivalent expressions out \
there for four or more input XOR expressions but that proves to be very \
computationally intensive and time consuming. It is pretty interesting how \
some expressions require significantly more NAND gates to be expressed \
because of their structure and the nature of NAND gates. It would be \
interesting to look into making expressions with NOR and XOR gates in the \
future and maybe putting more time into generating random expressions.\
\>", "Text",
 CellChangeTimes->{
  3.7405009015911217`*^9},ExpressionUUID->"db6c6a7f-100c-4119-8c2f-\
0fc4d183f75f"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 7, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[583, 22, 176, 3, 67, "Section",ExpressionUUID->"2079ab89-b2ab-462c-bce8-89046c72cd50"],
Cell[762, 27, 854, 14, 78, "Text",ExpressionUUID->"5bf0cb73-cb78-481c-b6f3-ae125f7dfe47"],
Cell[CellGroupData[{
Cell[1641, 45, 351, 8, 28, "Input",ExpressionUUID->"4164c5c1-6a33-46da-b1ad-135202167bea"],
Cell[1995, 55, 17624, 499, 239, "Output",ExpressionUUID->"8998c912-b957-460e-bf69-9703888dc6a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19656, 559, 165, 3, 53, "Subsection",ExpressionUUID->"d57f194e-080f-470b-9286-5b48778479e8"],
Cell[19824, 564, 264, 6, 34, "Text",ExpressionUUID->"5d2fb3c9-9038-486c-99aa-ef072b602947"],
Cell[20091, 572, 211, 5, 28, "Input",ExpressionUUID->"29b18122-89b2-49d7-bbd9-dc950d2be285"],
Cell[20305, 579, 1065, 23, 28, "Input",ExpressionUUID->"aedcf9a1-5652-4b46-845a-bad303d1a1a3"],
Cell[21373, 604, 3370, 58, 48, "Input",ExpressionUUID->"fa42d1b8-a23f-42b3-add7-d10b5d56b649"],
Cell[24746, 664, 622, 11, 56, "Text",ExpressionUUID->"361488b4-1d2b-4155-be2a-24035f183701"],
Cell[25371, 677, 62234, 1026, 202, "Input",ExpressionUUID->"d6dfdf78-7eec-414e-b3be-310a3b4ba2fa"],
Cell[87608, 1705, 719, 12, 56, "Text",ExpressionUUID->"4ed9f5e7-7243-4169-aabd-8d68c89f4483"],
Cell[88330, 1719, 260, 6, 28, "Input",ExpressionUUID->"a1eb5ff6-3ad1-4185-b9a2-9d8f82705c92"],
Cell[88593, 1727, 437, 10, 28, "Input",ExpressionUUID->"b4f9e5ec-7409-4dc5-bcba-a00bc16e086f"],
Cell[89033, 1739, 6513, 102, 67, "Input",ExpressionUUID->"4149f97f-87fd-4945-829e-71cd75128fc4"],
Cell[95549, 1843, 210, 5, 28, "Input",ExpressionUUID->"f744f5d4-b68d-4c8c-b6c0-1323f79aa2b7"],
Cell[95762, 1850, 421, 8, 28, "Input",ExpressionUUID->"4c9986e4-529a-41e5-83b3-d78d2f3bd696"],
Cell[96186, 1860, 452, 8, 56, "Text",ExpressionUUID->"264593fd-d8c8-47bb-8774-e17f5ff55325"],
Cell[CellGroupData[{
Cell[96663, 1872, 301, 7, 28, "Input",ExpressionUUID->"64b0b3cd-229c-4baa-b699-3b1746afc00d"],
Cell[96967, 1881, 194, 4, 32, "Output",ExpressionUUID->"8915d7ed-d6ff-4ec8-aa14-cc5365a44a35"]
}, Closed]],
Cell[97176, 1888, 224, 5, 30, "Text",ExpressionUUID->"48df91ab-3e6b-4af4-be91-a17b5e383b04"],
Cell[97403, 1895, 153, 3, 28, "Input",ExpressionUUID->"07320cc6-9605-41d5-84d6-373fe36f63da"],
Cell[97559, 1900, 1485, 40, 105, "Input",ExpressionUUID->"8b987b1f-2c65-44a8-a377-4652b9be2203"],
Cell[99047, 1942, 209, 3, 28, "Input",ExpressionUUID->"1b23889c-d2eb-42db-8cb1-46f75bfc8d3c"],
Cell[99259, 1947, 961, 26, 28, "Input",ExpressionUUID->"e65bb241-0559-4aa2-a92e-d95f0b76c1a9"],
Cell[100223, 1975, 198, 4, 28, "Input",ExpressionUUID->"8aafdb6c-f2b2-4048-9585-1ac33af4e574"],
Cell[100424, 1981, 544, 12, 34, "Input",ExpressionUUID->"4fbca12c-45f6-4192-be3c-a57e72e6cbb9"],
Cell[100971, 1995, 1368, 33, 67, "Input",ExpressionUUID->"a4ec1170-19bb-4d44-89a1-c8b4ceb9d66c"],
Cell[102342, 2030, 196, 4, 28, "Input",ExpressionUUID->"ff031b0d-4afc-4981-880f-1a146e7fcb60"],
Cell[102541, 2036, 418, 8, 28, "Input",ExpressionUUID->"97fba2f4-1df0-4a12-9137-4d8e5329be65"],
Cell[102962, 2046, 234, 6, 34, "Text",ExpressionUUID->"0036c1b0-27fa-479e-95ca-1e4e01d9be58"],
Cell[CellGroupData[{
Cell[103221, 2056, 1102, 20, 34, "Input",ExpressionUUID->"a998b59b-6e1c-4184-9db9-6ec19ba0cb1c"],
Cell[104326, 2078, 168, 3, 32, "Output",ExpressionUUID->"c895e48f-8d97-478d-a0bf-804535361872"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[104543, 2087, 177, 3, 53, "Subsection",ExpressionUUID->"6c0b20f8-486a-43c5-a7e4-ecd02a8316fb"],
Cell[104723, 2092, 435, 8, 56, "Text",ExpressionUUID->"158d0503-3233-4b11-878d-d16e9a30b960"],
Cell[105161, 2102, 203, 3, 28, "Input",ExpressionUUID->"9dda3d1c-3beb-48b1-ab84-5e875e00bcdf"],
Cell[105367, 2107, 1992, 38, 86, "Input",ExpressionUUID->"6d4e6c41-5918-43e4-b454-350810e84484"],
Cell[107362, 2147, 188, 4, 28, "Input",ExpressionUUID->"544d7fba-7c00-4562-ae81-89dc55ecd88a"],
Cell[107553, 2153, 794, 19, 28, "Input",ExpressionUUID->"d8a043c0-fa08-4654-927f-c0a6c18c8ad1"],
Cell[108350, 2174, 198, 4, 28, "Input",ExpressionUUID->"aa522235-4c16-44c2-9605-58473d75bff5"],
Cell[108551, 2180, 483, 12, 34, "Input",ExpressionUUID->"6a76de67-3c27-46be-a56f-2dc50c18e502"],
Cell[109037, 2194, 3289, 62, 90, "Input",ExpressionUUID->"6ec70d06-6012-42ba-957c-c0715c5befe6"],
Cell[112329, 2258, 457, 9, 56, "Text",ExpressionUUID->"1ac92048-746d-4aa6-bb49-6002e6300400"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112823, 2272, 167, 3, 53, "Subsection",ExpressionUUID->"1c33e6b9-d1b0-4bde-9e57-3bcb8ff99885"],
Cell[112993, 2277, 500, 9, 56, "Text",ExpressionUUID->"350bccc9-1bbc-4e81-9f26-2506796cb1be"],
Cell[113496, 2288, 206, 3, 28, "Input",ExpressionUUID->"1056575b-e96c-451d-a488-38b6db044b5f"],
Cell[113705, 2293, 519, 10, 34, "Input",ExpressionUUID->"48686a5b-d9d7-4091-9a3a-d0423ae3de09"],
Cell[114227, 2305, 213, 3, 28, "Input",ExpressionUUID->"02d91a3a-6bb5-40aa-b0fe-220634b6bd15"],
Cell[114443, 2310, 1854, 39, 86, "Input",ExpressionUUID->"68969807-6781-492a-b1f2-a660f3bfdaad"],
Cell[116300, 2351, 209, 3, 28, "Input",ExpressionUUID->"65c86eb7-70f0-4928-8c04-5c8410ac2c2c"],
Cell[116512, 2356, 1270, 26, 48, "Input",ExpressionUUID->"b2d15e3a-bb76-46ba-a58a-3943d8f556aa"],
Cell[117785, 2384, 213, 3, 28, "Input",ExpressionUUID->"1f7ef065-8d93-4eb6-833c-378371ea6fb7"],
Cell[118001, 2389, 428, 9, 28, "Input",ExpressionUUID->"584f269d-c393-4970-a0b2-dcaf59b172e2"],
Cell[118432, 2400, 595, 11, 56, "Text",ExpressionUUID->"68540293-77e2-493e-af77-333faa0ca65e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119064, 2416, 172, 3, 53, "Subsection",ExpressionUUID->"05b37fca-39f1-4731-afa0-f36eba5768d6"],
Cell[119239, 2421, 537, 10, 56, "Text",ExpressionUUID->"574c9754-f156-421f-8304-7aac91bb5f05"],
Cell[119779, 2433, 187, 4, 28, "Input",ExpressionUUID->"0b6e112b-adbd-4eaa-b8b4-51afa8971629"],
Cell[119969, 2439, 488, 9, 28, "Input",ExpressionUUID->"526fb5cc-4f5e-411a-8967-e817c23cde22"],
Cell[120460, 2450, 194, 4, 28, "Input",ExpressionUUID->"3bad1772-8e5d-4d28-b7c4-42f385cd5e34"],
Cell[120657, 2456, 2219, 47, 86, "Input",ExpressionUUID->"2660ef0c-9e99-446a-998d-0854edffe82d"],
Cell[122879, 2505, 1863, 38, 48, "Input",ExpressionUUID->"abbce8c3-6d7f-4813-9b16-b426d55d1f3d"],
Cell[124745, 2545, 1223, 29, 48, "Input",ExpressionUUID->"e9b32402-4839-499d-9f66-7584c48281a4"],
Cell[125971, 2576, 317, 8, 28, "Input",ExpressionUUID->"9a527d01-3443-4eac-bc6a-3a6f372d9548"],
Cell[126291, 2586, 5761, 149, 352, "Input",ExpressionUUID->"aa3482de-befc-4693-8f6f-adf8061326e9"],
Cell[132055, 2737, 7010, 172, 409, "Input",ExpressionUUID->"d58f1865-c395-4de1-b1bf-398312ff2f76"],
Cell[139068, 2911, 518, 10, 56, "Text",ExpressionUUID->"1aaf348e-c6da-49c8-acb5-20df316734a2"],
Cell[139589, 2923, 6027, 121, 242, "Input",ExpressionUUID->"0ce00bb2-a3d3-4147-b052-b6a28f198811"],
Cell[145619, 3046, 40273, 823, 221, "Input",ExpressionUUID->"d0656fe1-1c9f-4573-b009-6316040e4f3f"],
Cell[185895, 3871, 290, 7, 34, "Text",ExpressionUUID->"8dc9a7f2-32e9-400b-9054-382141d4665d"],
Cell[CellGroupData[{
Cell[186210, 3882, 1162, 27, 445, "Input",ExpressionUUID->"d75afd2b-4a91-4f1f-8d59-f8fe2d6cd6ac"],
Cell[187375, 3911, 5111, 167, 209, "Print",ExpressionUUID->"735630f8-f0c5-4538-a467-6d4d7ce99263"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[192535, 4084, 162, 3, 53, "Subsection",ExpressionUUID->"93e7cad3-c85b-4b6f-abc7-00019d9ac3dd"],
Cell[192700, 4089, 873, 14, 100, "Text",ExpressionUUID->"db6c6a7f-100c-4119-8c2f-0fc4d183f75f"]
}, Open  ]]
}, Open  ]]
}
]
*)

